{
	"info": {
		"_postman_id": "a7447be9-0778-4e4c-890d-5bec25d60eb2",
		"name": "spoonacular API",
		"description": "The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 80,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.\n\nSpecial diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.\n\nContact Support:\n Name: David Urbansky\n Email: david@spoonacular.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "recipes",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get Recipe Information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/information?includeNutrition=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"information"
									],
									"query": [
										{
											"key": "includeNutrition",
											"value": "<boolean>",
											"description": "Include nutrition data in the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The id of the recipe."
										}
									]
								},
								"description": "Use a recipe id to get full information about a recipe, such as ingredients, nutrition, diet and allergen information, etc."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/information?includeNutrition=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"information"
											],
											"query": [
												{
													"key": "includeNutrition",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/information?includeNutrition=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"information"
											],
											"query": [
												{
													"key": "includeNutrition",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/information?includeNutrition=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"information"
											],
											"query": [
												{
													"key": "includeNutrition",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/information?includeNutrition=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"information"
											],
											"query": [
												{
													"key": "includeNutrition",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Similar Recipes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/similar?number=<number>&limitLicense=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"similar"
									],
									"query": [
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of random recipes to be returned (between 1 and 100)."
										},
										{
											"key": "limitLicense",
											"value": "<boolean>",
											"description": "Whether the recipes should have an open license that allows display with proper attribution."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The id of the source recipe for which similar recipes should be found."
										}
									]
								},
								"description": "Find recipes which are similar to the given one."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/similar?number=1&limitLicense=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"similar"
											],
											"query": [
												{
													"key": "number",
													"value": "1"
												},
												{
													"key": "limitLicense",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/similar?number=1&limitLicense=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"similar"
											],
											"query": [
												{
													"key": "number",
													"value": "1"
												},
												{
													"key": "limitLicense",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/similar?number=1&limitLicense=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"similar"
											],
											"query": [
												{
													"key": "number",
													"value": "1"
												},
												{
													"key": "limitLicense",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/similar?number=1&limitLicense=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"similar"
											],
											"query": [
												{
													"key": "number",
													"value": "1"
												},
												{
													"key": "limitLicense",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Recipe Taste by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/tasteWidget.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"tasteWidget.json"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty."
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Recipe Equipment by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/equipmentWidget.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"equipmentWidget.json"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's equipment list."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Recipe Price Breakdown by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"priceBreakdownWidget.json"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's price breakdown data."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Recipe Ingredients by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/ingredientWidget.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"ingredientWidget.json"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's ingredient list."
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Recipe Nutrition Widget by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/nutritionWidget.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"nutritionWidget.json"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's nutrition widget data."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget.json"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Get Analyzed Recipe Instructions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/analyzedInstructions?stepBreakdown=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"analyzedInstructions"
									],
									"query": [
										{
											"key": "stepBreakdown",
											"value": "<boolean>",
											"description": "Whether to break down the recipe steps even more."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get an analyzed breakdown of a recipe's instructions. Each step is enriched with the ingredients and equipment required."
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/analyzedInstructions?stepBreakdown=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"analyzedInstructions"
											],
											"query": [
												{
													"key": "stepBreakdown",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/analyzedInstructions?stepBreakdown=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"analyzedInstructions"
											],
											"query": [
												{
													"key": "stepBreakdown",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/analyzedInstructions?stepBreakdown=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"analyzedInstructions"
											],
											"query": [
												{
													"key": "stepBreakdown",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/analyzedInstructions?stepBreakdown=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"analyzedInstructions"
											],
											"query": [
												{
													"key": "stepBreakdown",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Visualize Recipe Ingredients by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/ingredientWidget?defaultCss=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"ingredientWidget"
									],
									"query": [
										{
											"key": "defaultCss",
											"value": "<boolean>",
											"description": "Whether the default CSS should be added to the response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Visualize a recipe's ingredient list."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/ingredientWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"ingredientWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "reprehenderit esse"
								}
							]
						},
						{
							"name": "Visualize Recipe Taste by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/tasteWidget",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"tasteWidget"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Get a recipe's taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "reprehenderit esse"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/tasteWidget",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"tasteWidget"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Visualize Recipe Equipment by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/equipmentWidget?defaultCss=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"equipmentWidget"
									],
									"query": [
										{
											"key": "defaultCss",
											"value": "<boolean>",
											"description": "Whether the default CSS should be added to the response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Visualize a recipe's equipment list."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "reprehenderit esse"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/equipmentWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"equipmentWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Visualize Recipe Price Breakdown by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget?defaultCss=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"priceBreakdownWidget"
									],
									"query": [
										{
											"key": "defaultCss",
											"value": "<boolean>",
											"description": "Whether the default CSS should be added to the response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Visualize a recipe's price breakdown."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/priceBreakdownWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"priceBreakdownWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "reprehenderit esse"
								}
							]
						},
						{
							"name": "Summarize Recipe",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"summary"
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Automatically generate a short description that summarizes key information about the recipe."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"summary"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"summary"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"summary"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"summary"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Visualize Recipe Nutrition by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/:id/nutritionWidget?defaultCss=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										":id",
										"nutritionWidget"
									],
									"query": [
										{
											"key": "defaultCss",
											"value": "<boolean>",
											"description": "Whether the default CSS should be added to the response."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<number>",
											"description": "(Required) The recipe id."
										}
									]
								},
								"description": "Visualize a recipe's nutritional information as HTML including CSS."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "reprehenderit esse"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/recipes/:id/nutritionWidget?defaultCss=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"recipes",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search Recipes by Ingredients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/findByIngredients?ingredients=<string>&number=<number>&limitLicense=<boolean>&ranking=<number>&ignorePantry=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"findByIngredients"
							],
							"query": [
								{
									"key": "ingredients",
									"value": "<string>",
									"description": "(Required) A comma-separated list of ingredients that the recipes should contain."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The maximum number of recipes to return (between 1 and 100). Defaults to 10."
								},
								{
									"key": "limitLicense",
									"value": "<boolean>",
									"description": "Whether the recipes should have an open license that allows display with proper attribution."
								},
								{
									"key": "ranking",
									"value": "<number>",
									"description": "Whether to maximize used ingredients (1) or minimize missing ingredients (2) first."
								},
								{
									"key": "ignorePantry",
									"value": "<boolean>",
									"description": "Whether to ignore typical pantry items, such as water, salt, flour, etc."
								}
							]
						},
						"description": "\n            Ever wondered what recipes you can cook with the ingredients you have in your fridge or pantry? This endpoint lets you find recipes that either maximize the usage of ingredients you have at hand (pre shopping) or minimize the ingredients that you don't currently have (post shopping).\n        "
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByIngredients?ingredients=apples,flour,sugar&number=10&limitLicense=true&ranking=1&ignorePantry=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByIngredients"
									],
									"query": [
										{
											"key": "ingredients",
											"value": "apples,flour,sugar"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "ranking",
											"value": "1"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByIngredients?ingredients=apples,flour,sugar&number=10&limitLicense=true&ranking=1&ignorePantry=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByIngredients"
									],
									"query": [
										{
											"key": "ingredients",
											"value": "apples,flour,sugar"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "ranking",
											"value": "1"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByIngredients?ingredients=apples,flour,sugar&number=10&limitLicense=true&ranking=1&ignorePantry=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByIngredients"
									],
									"query": [
										{
											"key": "ingredients",
											"value": "apples,flour,sugar"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "ranking",
											"value": "1"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByIngredients?ingredients=apples,flour,sugar&number=10&limitLicense=true&ranking=1&ignorePantry=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByIngredients"
									],
									"query": [
										{
											"key": "ingredients",
											"value": "apples,flour,sugar"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "ranking",
											"value": "1"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Search Recipes by Nutrients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/findByNutrients?minCarbs=<number>&maxCarbs=<number>&minProtein=<number>&maxProtein=<number>&minCalories=<number>&maxCalories=<number>&minFat=<number>&maxFat=<number>&minAlcohol=<number>&maxAlcohol=<number>&minCaffeine=<number>&maxCaffeine=<number>&minCopper=<number>&maxCopper=<number>&minCalcium=<number>&maxCalcium=<number>&minCholine=<number>&maxCholine=<number>&minCholesterol=<number>&maxCholesterol=<number>&minFluoride=<number>&maxFluoride=<number>&minSaturatedFat=<number>&maxSaturatedFat=<number>&minVitaminA=<number>&maxVitaminA=<number>&minVitaminC=<number>&maxVitaminC=<number>&minVitaminD=<number>&maxVitaminD=<number>&minVitaminE=<number>&maxVitaminE=<number>&minVitaminK=<number>&maxVitaminK=<number>&minVitaminB1=<number>&maxVitaminB1=<number>&minVitaminB2=<number>&maxVitaminB2=<number>&minVitaminB5=<number>&maxVitaminB5=<number>&minVitaminB3=<number>&maxVitaminB3=<number>&minVitaminB6=<number>&maxVitaminB6=<number>&minVitaminB12=<number>&maxVitaminB12=<number>&minFiber=<number>&maxFiber=<number>&minFolate=<number>&maxFolate=<number>&minFolicAcid=<number>&maxFolicAcid=<number>&minIodine=<number>&maxIodine=<number>&minIron=<number>&maxIron=<number>&minMagnesium=<number>&maxMagnesium=<number>&minManganese=<number>&maxManganese=<number>&minPhosphorus=<number>&maxPhosphorus=<number>&minPotassium=<number>&maxPotassium=<number>&minSelenium=<number>&maxSelenium=<number>&minSodium=<number>&maxSodium=<number>&minSugar=<number>&maxSugar=<number>&minZinc=<number>&maxZinc=<number>&offset=<number>&number=<number>&random=<boolean>&limitLicense=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"findByNutrients"
							],
							"query": [
								{
									"key": "minCarbs",
									"value": "<number>",
									"description": "The minimum amount of carbohydrates in grams the recipe must have."
								},
								{
									"key": "maxCarbs",
									"value": "<number>",
									"description": "The maximum amount of carbohydrates in grams the recipe can have."
								},
								{
									"key": "minProtein",
									"value": "<number>",
									"description": "The minimum amount of protein in grams the recipe must have."
								},
								{
									"key": "maxProtein",
									"value": "<number>",
									"description": "The maximum amount of protein in grams the recipe can have."
								},
								{
									"key": "minCalories",
									"value": "<number>",
									"description": "The minimum amount of calories the recipe must have."
								},
								{
									"key": "maxCalories",
									"value": "<number>",
									"description": "The maximum amount of calories the recipe can have."
								},
								{
									"key": "minFat",
									"value": "<number>",
									"description": "The minimum amount of fat in grams the recipe must have."
								},
								{
									"key": "maxFat",
									"value": "<number>",
									"description": "The maximum amount of fat in grams the recipe can have."
								},
								{
									"key": "minAlcohol",
									"value": "<number>",
									"description": "The minimum amount of alcohol in grams the recipe must have."
								},
								{
									"key": "maxAlcohol",
									"value": "<number>",
									"description": "The maximum amount of alcohol in grams the recipe can have."
								},
								{
									"key": "minCaffeine",
									"value": "<number>",
									"description": "The minimum amount of caffeine in milligrams the recipe must have."
								},
								{
									"key": "maxCaffeine",
									"value": "<number>",
									"description": "The maximum amount of caffeine in milligrams the recipe can have."
								},
								{
									"key": "minCopper",
									"value": "<number>",
									"description": "The minimum amount of copper in milligrams the recipe must have."
								},
								{
									"key": "maxCopper",
									"value": "<number>",
									"description": "The maximum amount of copper in milligrams the recipe can have."
								},
								{
									"key": "minCalcium",
									"value": "<number>",
									"description": "The minimum amount of calcium in milligrams the recipe must have."
								},
								{
									"key": "maxCalcium",
									"value": "<number>",
									"description": "The maximum amount of calcium in milligrams the recipe can have."
								},
								{
									"key": "minCholine",
									"value": "<number>",
									"description": "The minimum amount of choline in milligrams the recipe must have."
								},
								{
									"key": "maxCholine",
									"value": "<number>",
									"description": "The maximum amount of choline in milligrams the recipe can have."
								},
								{
									"key": "minCholesterol",
									"value": "<number>",
									"description": "The minimum amount of cholesterol in milligrams the recipe must have."
								},
								{
									"key": "maxCholesterol",
									"value": "<number>",
									"description": "The maximum amount of cholesterol in milligrams the recipe can have."
								},
								{
									"key": "minFluoride",
									"value": "<number>",
									"description": "The minimum amount of fluoride in milligrams the recipe must have."
								},
								{
									"key": "maxFluoride",
									"value": "<number>",
									"description": "The maximum amount of fluoride in milligrams the recipe can have."
								},
								{
									"key": "minSaturatedFat",
									"value": "<number>",
									"description": "The minimum amount of saturated fat in grams the recipe must have."
								},
								{
									"key": "maxSaturatedFat",
									"value": "<number>",
									"description": "The maximum amount of saturated fat in grams the recipe can have."
								},
								{
									"key": "minVitaminA",
									"value": "<number>",
									"description": "The minimum amount of Vitamin A in IU the recipe must have."
								},
								{
									"key": "maxVitaminA",
									"value": "<number>",
									"description": "The maximum amount of Vitamin A in IU the recipe can have."
								},
								{
									"key": "minVitaminC",
									"value": "<number>",
									"description": "The minimum amount of Vitamin C in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminC",
									"value": "<number>",
									"description": "The maximum amount of Vitamin C in milligrams the recipe can have."
								},
								{
									"key": "minVitaminD",
									"value": "<number>",
									"description": "The minimum amount of Vitamin D in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminD",
									"value": "<number>",
									"description": "The maximum amount of Vitamin D in micrograms the recipe can have."
								},
								{
									"key": "minVitaminE",
									"value": "<number>",
									"description": "The minimum amount of Vitamin E in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminE",
									"value": "<number>",
									"description": "The maximum amount of Vitamin E in milligrams the recipe can have."
								},
								{
									"key": "minVitaminK",
									"value": "<number>",
									"description": "The minimum amount of Vitamin K in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminK",
									"value": "<number>",
									"description": "The maximum amount of Vitamin K in micrograms the recipe can have."
								},
								{
									"key": "minVitaminB1",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B1 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB1",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B1 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB2",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B2 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB2",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B2 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB5",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B5 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB5",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B5 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB3",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B3 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB3",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B3 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB6",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B6 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB6",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B6 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB12",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B12 in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminB12",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B12 in micrograms the recipe can have."
								},
								{
									"key": "minFiber",
									"value": "<number>",
									"description": "The minimum amount of fiber in grams the recipe must have."
								},
								{
									"key": "maxFiber",
									"value": "<number>",
									"description": "The maximum amount of fiber in grams the recipe can have."
								},
								{
									"key": "minFolate",
									"value": "<number>",
									"description": "The minimum amount of folate in micrograms the recipe must have."
								},
								{
									"key": "maxFolate",
									"value": "<number>",
									"description": "The maximum amount of folate in micrograms the recipe can have."
								},
								{
									"key": "minFolicAcid",
									"value": "<number>",
									"description": "The minimum amount of folic acid in micrograms the recipe must have."
								},
								{
									"key": "maxFolicAcid",
									"value": "<number>",
									"description": "The maximum amount of folic acid in micrograms the recipe can have."
								},
								{
									"key": "minIodine",
									"value": "<number>",
									"description": "The minimum amount of iodine in micrograms the recipe must have."
								},
								{
									"key": "maxIodine",
									"value": "<number>",
									"description": "The maximum amount of iodine in micrograms the recipe can have."
								},
								{
									"key": "minIron",
									"value": "<number>",
									"description": "The minimum amount of iron in milligrams the recipe must have."
								},
								{
									"key": "maxIron",
									"value": "<number>",
									"description": "The maximum amount of iron in milligrams the recipe can have."
								},
								{
									"key": "minMagnesium",
									"value": "<number>",
									"description": "The minimum amount of magnesium in milligrams the recipe must have."
								},
								{
									"key": "maxMagnesium",
									"value": "<number>",
									"description": "The maximum amount of magnesium in milligrams the recipe can have."
								},
								{
									"key": "minManganese",
									"value": "<number>",
									"description": "The minimum amount of manganese in milligrams the recipe must have."
								},
								{
									"key": "maxManganese",
									"value": "<number>",
									"description": "The maximum amount of manganese in milligrams the recipe can have."
								},
								{
									"key": "minPhosphorus",
									"value": "<number>",
									"description": "The minimum amount of phosphorus in milligrams the recipe must have."
								},
								{
									"key": "maxPhosphorus",
									"value": "<number>",
									"description": "The maximum amount of phosphorus in milligrams the recipe can have."
								},
								{
									"key": "minPotassium",
									"value": "<number>",
									"description": "The minimum amount of potassium in milligrams the recipe must have."
								},
								{
									"key": "maxPotassium",
									"value": "<number>",
									"description": "The maximum amount of potassium in milligrams the recipe can have."
								},
								{
									"key": "minSelenium",
									"value": "<number>",
									"description": "The minimum amount of selenium in micrograms the recipe must have."
								},
								{
									"key": "maxSelenium",
									"value": "<number>",
									"description": "The maximum amount of selenium in micrograms the recipe can have."
								},
								{
									"key": "minSodium",
									"value": "<number>",
									"description": "The minimum amount of sodium in milligrams the recipe must have."
								},
								{
									"key": "maxSodium",
									"value": "<number>",
									"description": "The maximum amount of sodium in milligrams the recipe can have."
								},
								{
									"key": "minSugar",
									"value": "<number>",
									"description": "The minimum amount of sugar in grams the recipe must have."
								},
								{
									"key": "maxSugar",
									"value": "<number>",
									"description": "The maximum amount of sugar in grams the recipe can have."
								},
								{
									"key": "minZinc",
									"value": "<number>",
									"description": "The minimum amount of zinc in milligrams the recipe must have."
								},
								{
									"key": "maxZinc",
									"value": "<number>",
									"description": "The maximum amount of zinc in milligrams the recipe can have."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The number of results to skip (between 0 and 900)."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of expected results (between 1 and 100)."
								},
								{
									"key": "random",
									"value": "<boolean>",
									"description": "If true, every request will give you a random set of recipes within the requested limits."
								},
								{
									"key": "limitLicense",
									"value": "<boolean>",
									"description": "Whether the recipes should have an open license that allows display with proper attribution."
								}
							]
						},
						"description": "Find a set of recipes that adhere to the given nutritional limits. You may set limits for macronutrients (calories, protein, fat, and carbohydrate) and/or many micronutrients."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByNutrients?minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&random=false&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByNutrients"
									],
									"query": [
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "random",
											"value": "false"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByNutrients?minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&random=false&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByNutrients"
									],
									"query": [
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "random",
											"value": "false"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByNutrients?minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&random=false&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByNutrients"
									],
									"query": [
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "random",
											"value": "false"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/findByNutrients?minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&random=false&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"findByNutrients"
									],
									"query": [
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "random",
											"value": "false"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Search Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/complexSearch?query=<string>&cuisine=<string>&excludeCuisine=<string>&diet=<string>&intolerances=<string>&equipment=<string>&includeIngredients=<string>&excludeIngredients=<string>&type=<string>&instructionsRequired=<boolean>&fillIngredients=<boolean>&addRecipeInformation=<boolean>&addRecipeNutrition=<boolean>&author=<string>&tags=<string>&recipeBoxId=<number>&titleMatch=<string>&maxReadyTime=<number>&ignorePantry=<boolean>&sort=<string>&sortDirection=<string>&minCarbs=<number>&maxCarbs=<number>&minProtein=<number>&maxProtein=<number>&minCalories=<number>&maxCalories=<number>&minFat=<number>&maxFat=<number>&minAlcohol=<number>&maxAlcohol=<number>&minCaffeine=<number>&maxCaffeine=<number>&minCopper=<number>&maxCopper=<number>&minCalcium=<number>&maxCalcium=<number>&minCholine=<number>&maxCholine=<number>&minCholesterol=<number>&maxCholesterol=<number>&minFluoride=<number>&maxFluoride=<number>&minSaturatedFat=<number>&maxSaturatedFat=<number>&minVitaminA=<number>&maxVitaminA=<number>&minVitaminC=<number>&maxVitaminC=<number>&minVitaminD=<number>&maxVitaminD=<number>&minVitaminE=<number>&maxVitaminE=<number>&minVitaminK=<number>&maxVitaminK=<number>&minVitaminB1=<number>&maxVitaminB1=<number>&minVitaminB2=<number>&maxVitaminB2=<number>&minVitaminB5=<number>&maxVitaminB5=<number>&minVitaminB3=<number>&maxVitaminB3=<number>&minVitaminB6=<number>&maxVitaminB6=<number>&minVitaminB12=<number>&maxVitaminB12=<number>&minFiber=<number>&maxFiber=<number>&minFolate=<number>&maxFolate=<number>&minFolicAcid=<number>&maxFolicAcid=<number>&minIodine=<number>&maxIodine=<number>&minIron=<number>&maxIron=<number>&minMagnesium=<number>&maxMagnesium=<number>&minManganese=<number>&maxManganese=<number>&minPhosphorus=<number>&maxPhosphorus=<number>&minPotassium=<number>&maxPotassium=<number>&minSelenium=<number>&maxSelenium=<number>&minSodium=<number>&maxSodium=<number>&minSugar=<number>&maxSugar=<number>&minZinc=<number>&maxZinc=<number>&offset=<number>&number=<number>&limitLicense=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"complexSearch"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The (natural language) recipe search query."
								},
								{
									"key": "cuisine",
									"value": "<string>",
									"description": "The cuisine(s) of the recipes. One or more, comma separated (will be interpreted as 'OR'). See a full list of supported cuisines."
								},
								{
									"key": "excludeCuisine",
									"value": "<string>",
									"description": "The cuisine(s) the recipes must not match. One or more, comma separated (will be interpreted as 'AND'). See a full list of supported cuisines."
								},
								{
									"key": "diet",
									"value": "<string>",
									"description": "The diet for which the recipes must be suitable. See a full list of supported diets."
								},
								{
									"key": "intolerances",
									"value": "<string>",
									"description": "A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full list of supported intolerances."
								},
								{
									"key": "equipment",
									"value": "<string>",
									"description": "The equipment required. Multiple values will be interpreted as 'or'. For example, value could be \"blender, frying pan, bowl\"."
								},
								{
									"key": "includeIngredients",
									"value": "<string>",
									"description": "A comma-separated list of ingredients that should/must be used in the recipes."
								},
								{
									"key": "excludeIngredients",
									"value": "<string>",
									"description": "A comma-separated list of ingredients or ingredient types that the recipes must not contain."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of recipe. See a full list of supported meal types."
								},
								{
									"key": "instructionsRequired",
									"value": "<boolean>",
									"description": "Whether the recipes must have instructions."
								},
								{
									"key": "fillIngredients",
									"value": "<boolean>",
									"description": "Add information about the ingredients and whether they are used or missing in relation to the query."
								},
								{
									"key": "addRecipeInformation",
									"value": "<boolean>",
									"description": "If set to true, you get more information about the recipes returned."
								},
								{
									"key": "addRecipeNutrition",
									"value": "<boolean>",
									"description": "If set to true, you get nutritional information about each recipes returned."
								},
								{
									"key": "author",
									"value": "<string>",
									"description": "The username of the recipe author."
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "User defined tags that have to match. The author param has to be set."
								},
								{
									"key": "recipeBoxId",
									"value": "<number>",
									"description": "The id of the recipe box to which the search should be limited to."
								},
								{
									"key": "titleMatch",
									"value": "<string>",
									"description": "Enter text that must be found in the title of the recipes."
								},
								{
									"key": "maxReadyTime",
									"value": "<number>",
									"description": "The maximum time in minutes it should take to prepare and cook the recipe."
								},
								{
									"key": "ignorePantry",
									"value": "<boolean>",
									"description": "Whether to ignore typical pantry items, such as water, salt, flour, etc."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The strategy to sort recipes by. See a full list of supported sorting options."
								},
								{
									"key": "sortDirection",
									"value": "<string>",
									"description": "The direction in which to sort. Must be either 'asc' (ascending) or 'desc' (descending)."
								},
								{
									"key": "minCarbs",
									"value": "<number>",
									"description": "The minimum amount of carbohydrates in grams the recipe must have."
								},
								{
									"key": "maxCarbs",
									"value": "<number>",
									"description": "The maximum amount of carbohydrates in grams the recipe can have."
								},
								{
									"key": "minProtein",
									"value": "<number>",
									"description": "The minimum amount of protein in grams the recipe must have."
								},
								{
									"key": "maxProtein",
									"value": "<number>",
									"description": "The maximum amount of protein in grams the recipe can have."
								},
								{
									"key": "minCalories",
									"value": "<number>",
									"description": "The minimum amount of calories the recipe must have."
								},
								{
									"key": "maxCalories",
									"value": "<number>",
									"description": "The maximum amount of calories the recipe can have."
								},
								{
									"key": "minFat",
									"value": "<number>",
									"description": "The minimum amount of fat in grams the recipe must have."
								},
								{
									"key": "maxFat",
									"value": "<number>",
									"description": "The maximum amount of fat in grams the recipe can have."
								},
								{
									"key": "minAlcohol",
									"value": "<number>",
									"description": "The minimum amount of alcohol in grams the recipe must have."
								},
								{
									"key": "maxAlcohol",
									"value": "<number>",
									"description": "The maximum amount of alcohol in grams the recipe can have."
								},
								{
									"key": "minCaffeine",
									"value": "<number>",
									"description": "The minimum amount of caffeine in milligrams the recipe must have."
								},
								{
									"key": "maxCaffeine",
									"value": "<number>",
									"description": "The maximum amount of caffeine in milligrams the recipe can have."
								},
								{
									"key": "minCopper",
									"value": "<number>",
									"description": "The minimum amount of copper in milligrams the recipe must have."
								},
								{
									"key": "maxCopper",
									"value": "<number>",
									"description": "The maximum amount of copper in milligrams the recipe can have."
								},
								{
									"key": "minCalcium",
									"value": "<number>",
									"description": "The minimum amount of calcium in milligrams the recipe must have."
								},
								{
									"key": "maxCalcium",
									"value": "<number>",
									"description": "The maximum amount of calcium in milligrams the recipe can have."
								},
								{
									"key": "minCholine",
									"value": "<number>",
									"description": "The minimum amount of choline in milligrams the recipe must have."
								},
								{
									"key": "maxCholine",
									"value": "<number>",
									"description": "The maximum amount of choline in milligrams the recipe can have."
								},
								{
									"key": "minCholesterol",
									"value": "<number>",
									"description": "The minimum amount of cholesterol in milligrams the recipe must have."
								},
								{
									"key": "maxCholesterol",
									"value": "<number>",
									"description": "The maximum amount of cholesterol in milligrams the recipe can have."
								},
								{
									"key": "minFluoride",
									"value": "<number>",
									"description": "The minimum amount of fluoride in milligrams the recipe must have."
								},
								{
									"key": "maxFluoride",
									"value": "<number>",
									"description": "The maximum amount of fluoride in milligrams the recipe can have."
								},
								{
									"key": "minSaturatedFat",
									"value": "<number>",
									"description": "The minimum amount of saturated fat in grams the recipe must have."
								},
								{
									"key": "maxSaturatedFat",
									"value": "<number>",
									"description": "The maximum amount of saturated fat in grams the recipe can have."
								},
								{
									"key": "minVitaminA",
									"value": "<number>",
									"description": "The minimum amount of Vitamin A in IU the recipe must have."
								},
								{
									"key": "maxVitaminA",
									"value": "<number>",
									"description": "The maximum amount of Vitamin A in IU the recipe can have."
								},
								{
									"key": "minVitaminC",
									"value": "<number>",
									"description": "The minimum amount of Vitamin C milligrams the recipe must have."
								},
								{
									"key": "maxVitaminC",
									"value": "<number>",
									"description": "The maximum amount of Vitamin C in milligrams the recipe can have."
								},
								{
									"key": "minVitaminD",
									"value": "<number>",
									"description": "The minimum amount of Vitamin D in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminD",
									"value": "<number>",
									"description": "The maximum amount of Vitamin D in micrograms the recipe can have."
								},
								{
									"key": "minVitaminE",
									"value": "<number>",
									"description": "The minimum amount of Vitamin E in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminE",
									"value": "<number>",
									"description": "The maximum amount of Vitamin E in milligrams the recipe can have."
								},
								{
									"key": "minVitaminK",
									"value": "<number>",
									"description": "The minimum amount of Vitamin K in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminK",
									"value": "<number>",
									"description": "The maximum amount of Vitamin K in micrograms the recipe can have."
								},
								{
									"key": "minVitaminB1",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B1 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB1",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B1 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB2",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B2 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB2",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B2 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB5",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B5 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB5",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B5 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB3",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B3 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB3",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B3 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB6",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B6 in milligrams the recipe must have."
								},
								{
									"key": "maxVitaminB6",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B6 in milligrams the recipe can have."
								},
								{
									"key": "minVitaminB12",
									"value": "<number>",
									"description": "The minimum amount of Vitamin B12 in micrograms the recipe must have."
								},
								{
									"key": "maxVitaminB12",
									"value": "<number>",
									"description": "The maximum amount of Vitamin B12 in micrograms the recipe can have."
								},
								{
									"key": "minFiber",
									"value": "<number>",
									"description": "The minimum amount of fiber in grams the recipe must have."
								},
								{
									"key": "maxFiber",
									"value": "<number>",
									"description": "The maximum amount of fiber in grams the recipe can have."
								},
								{
									"key": "minFolate",
									"value": "<number>",
									"description": "The minimum amount of folate in micrograms the recipe must have."
								},
								{
									"key": "maxFolate",
									"value": "<number>",
									"description": "The maximum amount of folate in micrograms the recipe can have."
								},
								{
									"key": "minFolicAcid",
									"value": "<number>",
									"description": "The minimum amount of folic acid in micrograms the recipe must have."
								},
								{
									"key": "maxFolicAcid",
									"value": "<number>",
									"description": "The maximum amount of folic acid in micrograms the recipe can have."
								},
								{
									"key": "minIodine",
									"value": "<number>",
									"description": "The minimum amount of iodine in micrograms the recipe must have."
								},
								{
									"key": "maxIodine",
									"value": "<number>",
									"description": "The maximum amount of iodine in micrograms the recipe can have."
								},
								{
									"key": "minIron",
									"value": "<number>",
									"description": "The minimum amount of iron in milligrams the recipe must have."
								},
								{
									"key": "maxIron",
									"value": "<number>",
									"description": "The maximum amount of iron in milligrams the recipe can have."
								},
								{
									"key": "minMagnesium",
									"value": "<number>",
									"description": "The minimum amount of magnesium in milligrams the recipe must have."
								},
								{
									"key": "maxMagnesium",
									"value": "<number>",
									"description": "The maximum amount of magnesium in milligrams the recipe can have."
								},
								{
									"key": "minManganese",
									"value": "<number>",
									"description": "The minimum amount of manganese in milligrams the recipe must have."
								},
								{
									"key": "maxManganese",
									"value": "<number>",
									"description": "The maximum amount of manganese in milligrams the recipe can have."
								},
								{
									"key": "minPhosphorus",
									"value": "<number>",
									"description": "The minimum amount of phosphorus in milligrams the recipe must have."
								},
								{
									"key": "maxPhosphorus",
									"value": "<number>",
									"description": "The maximum amount of phosphorus in milligrams the recipe can have."
								},
								{
									"key": "minPotassium",
									"value": "<number>",
									"description": "The minimum amount of potassium in milligrams the recipe must have."
								},
								{
									"key": "maxPotassium",
									"value": "<number>",
									"description": "The maximum amount of potassium in milligrams the recipe can have."
								},
								{
									"key": "minSelenium",
									"value": "<number>",
									"description": "The minimum amount of selenium in micrograms the recipe must have."
								},
								{
									"key": "maxSelenium",
									"value": "<number>",
									"description": "The maximum amount of selenium in micrograms the recipe can have."
								},
								{
									"key": "minSodium",
									"value": "<number>",
									"description": "The minimum amount of sodium in milligrams the recipe must have."
								},
								{
									"key": "maxSodium",
									"value": "<number>",
									"description": "The maximum amount of sodium in milligrams the recipe can have."
								},
								{
									"key": "minSugar",
									"value": "<number>",
									"description": "The minimum amount of sugar in grams the recipe must have."
								},
								{
									"key": "maxSugar",
									"value": "<number>",
									"description": "The maximum amount of sugar in grams the recipe can have."
								},
								{
									"key": "minZinc",
									"value": "<number>",
									"description": "The minimum amount of zinc in milligrams the recipe must have."
								},
								{
									"key": "maxZinc",
									"value": "<number>",
									"description": "The maximum amount of zinc in milligrams the recipe can have."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The number of results to skip (between 0 and 900)."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of expected results (between 1 and 100)."
								},
								{
									"key": "limitLicense",
									"value": "<boolean>",
									"description": "Whether the recipes should have an open license that allows display with proper attribution."
								}
							]
						},
						"description": "Search through hundreds of thousands of recipes using advanced filtering and ranking. NOTE: This method combines searching by query, by ingredients, and by nutrients into one endpoint."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/complexSearch?query=pasta&cuisine=italian&excludeCuisine=greek&diet=vegetarian&intolerances=gluten&equipment=pan&includeIngredients=tomato,cheese&excludeIngredients=eggs&type=main course&instructionsRequired=true&fillIngredients=false&addRecipeInformation=false&addRecipeNutrition=false&author=coffeebean&tags=myCustomTag&recipeBoxId=2468&titleMatch=Crock Pot&maxReadyTime=20&ignorePantry=true&sort=calories&sortDirection=asc&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"complexSearch"
									],
									"query": [
										{
											"key": "query",
											"value": "pasta"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "excludeCuisine",
											"value": "greek"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "intolerances",
											"value": "gluten"
										},
										{
											"key": "equipment",
											"value": "pan"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "instructionsRequired",
											"value": "true"
										},
										{
											"key": "fillIngredients",
											"value": "false"
										},
										{
											"key": "addRecipeInformation",
											"value": "false"
										},
										{
											"key": "addRecipeNutrition",
											"value": "false"
										},
										{
											"key": "author",
											"value": "coffeebean"
										},
										{
											"key": "tags",
											"value": "myCustomTag"
										},
										{
											"key": "recipeBoxId",
											"value": "2468"
										},
										{
											"key": "titleMatch",
											"value": "Crock Pot"
										},
										{
											"key": "maxReadyTime",
											"value": "20"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										},
										{
											"key": "sort",
											"value": "calories"
										},
										{
											"key": "sortDirection",
											"value": "asc"
										},
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/complexSearch?query=pasta&cuisine=italian&excludeCuisine=greek&diet=vegetarian&intolerances=gluten&equipment=pan&includeIngredients=tomato,cheese&excludeIngredients=eggs&type=main course&instructionsRequired=true&fillIngredients=false&addRecipeInformation=false&addRecipeNutrition=false&author=coffeebean&tags=myCustomTag&recipeBoxId=2468&titleMatch=Crock Pot&maxReadyTime=20&ignorePantry=true&sort=calories&sortDirection=asc&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"complexSearch"
									],
									"query": [
										{
											"key": "query",
											"value": "pasta"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "excludeCuisine",
											"value": "greek"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "intolerances",
											"value": "gluten"
										},
										{
											"key": "equipment",
											"value": "pan"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "instructionsRequired",
											"value": "true"
										},
										{
											"key": "fillIngredients",
											"value": "false"
										},
										{
											"key": "addRecipeInformation",
											"value": "false"
										},
										{
											"key": "addRecipeNutrition",
											"value": "false"
										},
										{
											"key": "author",
											"value": "coffeebean"
										},
										{
											"key": "tags",
											"value": "myCustomTag"
										},
										{
											"key": "recipeBoxId",
											"value": "2468"
										},
										{
											"key": "titleMatch",
											"value": "Crock Pot"
										},
										{
											"key": "maxReadyTime",
											"value": "20"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										},
										{
											"key": "sort",
											"value": "calories"
										},
										{
											"key": "sortDirection",
											"value": "asc"
										},
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/complexSearch?query=pasta&cuisine=italian&excludeCuisine=greek&diet=vegetarian&intolerances=gluten&equipment=pan&includeIngredients=tomato,cheese&excludeIngredients=eggs&type=main course&instructionsRequired=true&fillIngredients=false&addRecipeInformation=false&addRecipeNutrition=false&author=coffeebean&tags=myCustomTag&recipeBoxId=2468&titleMatch=Crock Pot&maxReadyTime=20&ignorePantry=true&sort=calories&sortDirection=asc&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"complexSearch"
									],
									"query": [
										{
											"key": "query",
											"value": "pasta"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "excludeCuisine",
											"value": "greek"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "intolerances",
											"value": "gluten"
										},
										{
											"key": "equipment",
											"value": "pan"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "instructionsRequired",
											"value": "true"
										},
										{
											"key": "fillIngredients",
											"value": "false"
										},
										{
											"key": "addRecipeInformation",
											"value": "false"
										},
										{
											"key": "addRecipeNutrition",
											"value": "false"
										},
										{
											"key": "author",
											"value": "coffeebean"
										},
										{
											"key": "tags",
											"value": "myCustomTag"
										},
										{
											"key": "recipeBoxId",
											"value": "2468"
										},
										{
											"key": "titleMatch",
											"value": "Crock Pot"
										},
										{
											"key": "maxReadyTime",
											"value": "20"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										},
										{
											"key": "sort",
											"value": "calories"
										},
										{
											"key": "sortDirection",
											"value": "asc"
										},
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/complexSearch?query=pasta&cuisine=italian&excludeCuisine=greek&diet=vegetarian&intolerances=gluten&equipment=pan&includeIngredients=tomato,cheese&excludeIngredients=eggs&type=main course&instructionsRequired=true&fillIngredients=false&addRecipeInformation=false&addRecipeNutrition=false&author=coffeebean&tags=myCustomTag&recipeBoxId=2468&titleMatch=Crock Pot&maxReadyTime=20&ignorePantry=true&sort=calories&sortDirection=asc&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minCalories=50&maxCalories=800&minFat=1&maxFat=100&minAlcohol=0&maxAlcohol=100&minCaffeine=0&maxCaffeine=100&minCopper=0&maxCopper=100&minCalcium=0&maxCalcium=100&minCholine=0&maxCholine=100&minCholesterol=0&maxCholesterol=100&minFluoride=0&maxFluoride=100&minSaturatedFat=0&maxSaturatedFat=100&minVitaminA=0&maxVitaminA=100&minVitaminC=0&maxVitaminC=100&minVitaminD=0&maxVitaminD=100&minVitaminE=0&maxVitaminE=100&minVitaminK=0&maxVitaminK=100&minVitaminB1=0&maxVitaminB1=100&minVitaminB2=0&maxVitaminB2=100&minVitaminB5=0&maxVitaminB5=100&minVitaminB3=0&maxVitaminB3=100&minVitaminB6=0&maxVitaminB6=100&minVitaminB12=0&maxVitaminB12=100&minFiber=0&maxFiber=100&minFolate=0&maxFolate=100&minFolicAcid=0&maxFolicAcid=100&minIodine=0&maxIodine=100&minIron=0&maxIron=100&minMagnesium=0&maxMagnesium=100&minManganese=0&maxManganese=100&minPhosphorus=0&maxPhosphorus=100&minPotassium=0&maxPotassium=100&minSelenium=0&maxSelenium=100&minSodium=0&maxSodium=100&minSugar=0&maxSugar=100&minZinc=0&maxZinc=100&offset=0&number=10&limitLicense=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"complexSearch"
									],
									"query": [
										{
											"key": "query",
											"value": "pasta"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "excludeCuisine",
											"value": "greek"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "intolerances",
											"value": "gluten"
										},
										{
											"key": "equipment",
											"value": "pan"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "instructionsRequired",
											"value": "true"
										},
										{
											"key": "fillIngredients",
											"value": "false"
										},
										{
											"key": "addRecipeInformation",
											"value": "false"
										},
										{
											"key": "addRecipeNutrition",
											"value": "false"
										},
										{
											"key": "author",
											"value": "coffeebean"
										},
										{
											"key": "tags",
											"value": "myCustomTag"
										},
										{
											"key": "recipeBoxId",
											"value": "2468"
										},
										{
											"key": "titleMatch",
											"value": "Crock Pot"
										},
										{
											"key": "maxReadyTime",
											"value": "20"
										},
										{
											"key": "ignorePantry",
											"value": "true"
										},
										{
											"key": "sort",
											"value": "calories"
										},
										{
											"key": "sortDirection",
											"value": "asc"
										},
										{
											"key": "minCarbs",
											"value": "10"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										},
										{
											"key": "minProtein",
											"value": "10"
										},
										{
											"key": "maxProtein",
											"value": "100"
										},
										{
											"key": "minCalories",
											"value": "50"
										},
										{
											"key": "maxCalories",
											"value": "800"
										},
										{
											"key": "minFat",
											"value": "1"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minAlcohol",
											"value": "0"
										},
										{
											"key": "maxAlcohol",
											"value": "100"
										},
										{
											"key": "minCaffeine",
											"value": "0"
										},
										{
											"key": "maxCaffeine",
											"value": "100"
										},
										{
											"key": "minCopper",
											"value": "0"
										},
										{
											"key": "maxCopper",
											"value": "100"
										},
										{
											"key": "minCalcium",
											"value": "0"
										},
										{
											"key": "maxCalcium",
											"value": "100"
										},
										{
											"key": "minCholine",
											"value": "0"
										},
										{
											"key": "maxCholine",
											"value": "100"
										},
										{
											"key": "minCholesterol",
											"value": "0"
										},
										{
											"key": "maxCholesterol",
											"value": "100"
										},
										{
											"key": "minFluoride",
											"value": "0"
										},
										{
											"key": "maxFluoride",
											"value": "100"
										},
										{
											"key": "minSaturatedFat",
											"value": "0"
										},
										{
											"key": "maxSaturatedFat",
											"value": "100"
										},
										{
											"key": "minVitaminA",
											"value": "0"
										},
										{
											"key": "maxVitaminA",
											"value": "100"
										},
										{
											"key": "minVitaminC",
											"value": "0"
										},
										{
											"key": "maxVitaminC",
											"value": "100"
										},
										{
											"key": "minVitaminD",
											"value": "0"
										},
										{
											"key": "maxVitaminD",
											"value": "100"
										},
										{
											"key": "minVitaminE",
											"value": "0"
										},
										{
											"key": "maxVitaminE",
											"value": "100"
										},
										{
											"key": "minVitaminK",
											"value": "0"
										},
										{
											"key": "maxVitaminK",
											"value": "100"
										},
										{
											"key": "minVitaminB1",
											"value": "0"
										},
										{
											"key": "maxVitaminB1",
											"value": "100"
										},
										{
											"key": "minVitaminB2",
											"value": "0"
										},
										{
											"key": "maxVitaminB2",
											"value": "100"
										},
										{
											"key": "minVitaminB5",
											"value": "0"
										},
										{
											"key": "maxVitaminB5",
											"value": "100"
										},
										{
											"key": "minVitaminB3",
											"value": "0"
										},
										{
											"key": "maxVitaminB3",
											"value": "100"
										},
										{
											"key": "minVitaminB6",
											"value": "0"
										},
										{
											"key": "maxVitaminB6",
											"value": "100"
										},
										{
											"key": "minVitaminB12",
											"value": "0"
										},
										{
											"key": "maxVitaminB12",
											"value": "100"
										},
										{
											"key": "minFiber",
											"value": "0"
										},
										{
											"key": "maxFiber",
											"value": "100"
										},
										{
											"key": "minFolate",
											"value": "0"
										},
										{
											"key": "maxFolate",
											"value": "100"
										},
										{
											"key": "minFolicAcid",
											"value": "0"
										},
										{
											"key": "maxFolicAcid",
											"value": "100"
										},
										{
											"key": "minIodine",
											"value": "0"
										},
										{
											"key": "maxIodine",
											"value": "100"
										},
										{
											"key": "minIron",
											"value": "0"
										},
										{
											"key": "maxIron",
											"value": "100"
										},
										{
											"key": "minMagnesium",
											"value": "0"
										},
										{
											"key": "maxMagnesium",
											"value": "100"
										},
										{
											"key": "minManganese",
											"value": "0"
										},
										{
											"key": "maxManganese",
											"value": "100"
										},
										{
											"key": "minPhosphorus",
											"value": "0"
										},
										{
											"key": "maxPhosphorus",
											"value": "100"
										},
										{
											"key": "minPotassium",
											"value": "0"
										},
										{
											"key": "maxPotassium",
											"value": "100"
										},
										{
											"key": "minSelenium",
											"value": "0"
										},
										{
											"key": "maxSelenium",
											"value": "100"
										},
										{
											"key": "minSodium",
											"value": "0"
										},
										{
											"key": "maxSodium",
											"value": "100"
										},
										{
											"key": "minSugar",
											"value": "0"
										},
										{
											"key": "maxSugar",
											"value": "100"
										},
										{
											"key": "minZinc",
											"value": "0"
										},
										{
											"key": "maxZinc",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										},
										{
											"key": "limitLicense",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Recipe Information Bulk",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/informationBulk?ids=<string>&includeNutrition=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"informationBulk"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) A comma-separated list of recipe ids."
								},
								{
									"key": "includeNutrition",
									"value": "<boolean>",
									"description": "Include nutrition data to the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings."
								}
							]
						},
						"description": "Get information about multiple recipes at once. This is equivalent to calling the Get Recipe Information endpoint multiple times, but faster."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/informationBulk?ids=715538,716429&includeNutrition=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"informationBulk"
									],
									"query": [
										{
											"key": "ids",
											"value": "715538,716429"
										},
										{
											"key": "includeNutrition",
											"value": "false"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/informationBulk?ids=715538,716429&includeNutrition=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"informationBulk"
									],
									"query": [
										{
											"key": "ids",
											"value": "715538,716429"
										},
										{
											"key": "includeNutrition",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/informationBulk?ids=715538,716429&includeNutrition=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"informationBulk"
									],
									"query": [
										{
											"key": "ids",
											"value": "715538,716429"
										},
										{
											"key": "includeNutrition",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/informationBulk?ids=715538,716429&includeNutrition=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"informationBulk"
									],
									"query": [
										{
											"key": "ids",
											"value": "715538,716429"
										},
										{
											"key": "includeNutrition",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Random Recipes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/random?limitLicense=<boolean>&tags=<string>&number=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"random"
							],
							"query": [
								{
									"key": "limitLicense",
									"value": "<boolean>",
									"description": "Whether the recipes should have an open license that allows display with proper attribution."
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "The tags (can be diets, meal types, cuisines, or intolerances) that the recipe must have."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of random recipes to be returned (between 1 and 100)."
								}
							]
						},
						"description": "Find random (popular) recipes. If you need to filter recipes by diet, nutrition etc. you might want to consider using the complex recipe search endpoint and set the sort request parameter to random."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/random?limitLicense=true&tags=vegetarian, dessert&number=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"random"
									],
									"query": [
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "tags",
											"value": "vegetarian, dessert"
										},
										{
											"key": "number",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/random?limitLicense=true&tags=vegetarian, dessert&number=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"random"
									],
									"query": [
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "tags",
											"value": "vegetarian, dessert"
										},
										{
											"key": "number",
											"value": "1"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/random?limitLicense=true&tags=vegetarian, dessert&number=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"random"
									],
									"query": [
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "tags",
											"value": "vegetarian, dessert"
										},
										{
											"key": "number",
											"value": "1"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/random?limitLicense=true&tags=vegetarian, dessert&number=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"random"
									],
									"query": [
										{
											"key": "limitLicense",
											"value": "true"
										},
										{
											"key": "tags",
											"value": "vegetarian, dessert"
										},
										{
											"key": "number",
											"value": "1"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Autocomplete Recipe Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/autocomplete?query=<string>&number=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"autocomplete"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The query to be autocompleted."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of results to return (between 1 and 25)."
								}
							]
						},
						"description": "Autocomplete a partial input to suggest possible recipe names."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/autocomplete?query=burger&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"autocomplete"
									],
									"query": [
										{
											"key": "query",
											"value": "burger"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/autocomplete?query=burger&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"autocomplete"
									],
									"query": [
										{
											"key": "query",
											"value": "burger"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/autocomplete?query=burger&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"autocomplete"
									],
									"query": [
										{
											"key": "query",
											"value": "burger"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/autocomplete?query=burger&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"autocomplete"
									],
									"query": [
										{
											"key": "query",
											"value": "burger"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Extract Recipe from Website",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/extract?url=<string>&forceExtraction=<boolean>&analyze=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"extract"
							],
							"query": [
								{
									"key": "url",
									"value": "<string>",
									"description": "(Required) The URL of the recipe page."
								},
								{
									"key": "forceExtraction",
									"value": "<boolean>",
									"description": "If true, the extraction will be triggered whether we already know the recipe or not. Use this only if information is missing as this operation is slower."
								},
								{
									"key": "analyze",
									"value": "<boolean>",
									"description": "If true, the recipe will be analyzed and classified resolving in more data such as cuisines, dish types, and more."
								}
							]
						},
						"description": "This endpoint lets you extract recipe data such as title, ingredients, and instructions from any properly formatted Website."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/extract?url=https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies&forceExtraction=true&analyze=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"extract"
									],
									"query": [
										{
											"key": "url",
											"value": "https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies"
										},
										{
											"key": "forceExtraction",
											"value": "true"
										},
										{
											"key": "analyze",
											"value": "false"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/extract?url=https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies&forceExtraction=true&analyze=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"extract"
									],
									"query": [
										{
											"key": "url",
											"value": "https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies"
										},
										{
											"key": "forceExtraction",
											"value": "true"
										},
										{
											"key": "analyze",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/extract?url=https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies&forceExtraction=true&analyze=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"extract"
									],
									"query": [
										{
											"key": "url",
											"value": "https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies"
										},
										{
											"key": "forceExtraction",
											"value": "true"
										},
										{
											"key": "analyze",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/extract?url=https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies&forceExtraction=true&analyze=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"extract"
									],
									"query": [
										{
											"key": "url",
											"value": "https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies"
										},
										{
											"key": "forceExtraction",
											"value": "true"
										},
										{
											"key": "analyze",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Visualize Recipe Taste",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizeTaste",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizeTaste"
							]
						},
						"description": "Visualize a recipe's taste information as HTML including CSS. You can play around with that endpoint!"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 lemon",
											"description": "The ingredient list of the recipe, one ingredient per line."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeTaste",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeTaste"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 lemon",
											"description": "The ingredient list of the recipe, one ingredient per line."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeTaste",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeTaste"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 lemon",
											"description": "The ingredient list of the recipe, one ingredient per line."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeTaste",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeTaste"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 lemon",
											"description": "The ingredient list of the recipe, one ingredient per line."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeTaste",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeTaste"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "reprehenderit esse"
						}
					]
				},
				{
					"name": "Visualize Recipe Nutrition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line."
								},
								{
									"key": "servings",
									"value": "<number>",
									"description": "The number of servings."
								},
								{
									"key": "defaultCss",
									"value": "<boolean>",
									"description": "Whether the default CSS should be added to the response."
								},
								{
									"key": "showBacklink",
									"value": "<boolean>",
									"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizeNutrition",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizeNutrition"
							]
						},
						"description": "Visualize a recipe's nutritional information as HTML including CSS. You can play around with that endpoint!"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeNutrition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeNutrition"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeNutrition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeNutrition"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeNutrition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeNutrition"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeNutrition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeNutrition"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "reprehenderit esse"
						}
					]
				},
				{
					"name": "Visualize Price Breakdown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line."
								},
								{
									"key": "servings",
									"value": "<number>",
									"description": "The number of servings."
								},
								{
									"key": "mode",
									"value": "<number>",
									"description": "The mode in which the widget should be delivered. 1 = separate views (compact), 2 = all in one view (full)."
								},
								{
									"key": "defaultCss",
									"value": "<boolean>",
									"description": "Whether the default CSS should be added to the response."
								},
								{
									"key": "showBacklink",
									"value": "<boolean>",
									"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizePriceEstimator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizePriceEstimator"
							]
						},
						"description": "Visualize the price breakdown of a recipe. You can play around with that endpoint!"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "mode",
											"value": "1",
											"description": "The mode in which the widget should be delivered. 1 = separate views (compact), 2 = all in one view (full)."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizePriceEstimator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizePriceEstimator"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "reprehenderit esse"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "mode",
											"value": "1",
											"description": "The mode in which the widget should be delivered. 1 = separate views (compact), 2 = all in one view (full)."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizePriceEstimator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizePriceEstimator"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "mode",
											"value": "1",
											"description": "The mode in which the widget should be delivered. 1 = separate views (compact), 2 = all in one view (full)."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizePriceEstimator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizePriceEstimator"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "mode",
											"value": "1",
											"description": "The mode in which the widget should be delivered. 1 = separate views (compact), 2 = all in one view (full)."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizePriceEstimator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizePriceEstimator"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Visualize Equipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "instructions",
									"value": "<string>",
									"description": "The recipe's instructions."
								},
								{
									"key": "view",
									"value": "<string>",
									"description": "How to visualize the equipment, either \"grid\" or \"list\"."
								},
								{
									"key": "defaultCss",
									"value": "<boolean>",
									"description": "Whether the default CSS should be added to the response."
								},
								{
									"key": "showBacklink",
									"value": "<boolean>",
									"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizeEquipment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizeEquipment"
							]
						},
						"description": "Visualize the equipment used to make a recipe. You can play around with that endpoint!"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Preheat oven. Cut cucumber with a knife and put in a blender.",
											"description": "The recipe's instructions."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the equipment, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeEquipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeEquipment"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Preheat oven. Cut cucumber with a knife and put in a blender.",
											"description": "The recipe's instructions."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the equipment, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeEquipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeEquipment"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Preheat oven. Cut cucumber with a knife and put in a blender.",
											"description": "The recipe's instructions."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the equipment, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeEquipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeEquipment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "reprehenderit esse"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Preheat oven. Cut cucumber with a knife and put in a blender.",
											"description": "The recipe's instructions."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the equipment, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeEquipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeEquipment"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Recipe Card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "<string>",
									"description": "The title of the recipe.",
									"type": "text"
								},
								{
									"key": "image",
									"value": "<binary>",
									"description": "The binary image of the recipe as jpg.",
									"type": "text"
								},
								{
									"key": "ingredients",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n).",
									"type": "text"
								},
								{
									"key": "instructions",
									"value": "<string>",
									"description": "The instructions to make the recipe. One step per line (separate lines with \\n).",
									"type": "text"
								},
								{
									"key": "readyInMinutes",
									"value": "<number>",
									"description": "The number of minutes it takes to get the recipe on the table.",
									"type": "text"
								},
								{
									"key": "servings",
									"value": "<number>",
									"description": "The number of servings the recipe makes.",
									"type": "text"
								},
								{
									"key": "mask",
									"value": "<string>",
									"description": "The mask to put over the recipe image (\"ellipseMask\", \"diamondMask\", \"starMask\", \"heartMask\", \"potMask\", \"fishMask\").",
									"type": "text"
								},
								{
									"key": "backgroundImage",
									"value": "<string>",
									"description": "The background image (\"none\",\"background1\", or \"background2\").",
									"type": "text"
								},
								{
									"key": "author",
									"value": "<string>",
									"description": "The author of the recipe.",
									"type": "text"
								},
								{
									"key": "backgroundColor",
									"value": "<string>",
									"description": "The background color for the recipe card as a hex-string.",
									"type": "text"
								},
								{
									"key": "fontColor",
									"value": "<string>",
									"description": "The font color for the recipe card as a hex-string.",
									"type": "text"
								},
								{
									"key": "source",
									"value": "<string>",
									"description": "The source of the recipe.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizeRecipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizeRecipe"
							]
						},
						"description": "Generate a recipe card for a recipe."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "My recipe",
											"description": "The title of the recipe.",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"description": "The binary image of the recipe as jpg.",
											"type": "text"
										},
										{
											"key": "ingredients",
											"value": "2 cups of green beans",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "instructions",
											"value": "cook the beans",
											"description": "The instructions to make the recipe. One step per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "readyInMinutes",
											"value": "60",
											"description": "The number of minutes it takes to get the recipe on the table.",
											"type": "text"
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings the recipe makes.",
											"type": "text"
										},
										{
											"key": "mask",
											"value": "ellipseMask",
											"description": "The mask to put over the recipe image (\"ellipseMask\", \"diamondMask\", \"starMask\", \"heartMask\", \"potMask\", \"fishMask\").",
											"type": "text"
										},
										{
											"key": "backgroundImage",
											"value": "background1",
											"description": "The background image (\"none\",\"background1\", or \"background2\").",
											"type": "text"
										},
										{
											"key": "author",
											"value": "Anna Banana",
											"description": "The author of the recipe.",
											"type": "text"
										},
										{
											"key": "backgroundColor",
											"value": "#ffffff",
											"description": "The background color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "fontColor",
											"value": "#333333",
											"description": "The font color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "source",
											"value": "spoonacular.com",
											"description": "The source of the recipe.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeRecipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeRecipe"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "My recipe",
											"description": "The title of the recipe.",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"description": "The binary image of the recipe as jpg.",
											"type": "text"
										},
										{
											"key": "ingredients",
											"value": "2 cups of green beans",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "instructions",
											"value": "cook the beans",
											"description": "The instructions to make the recipe. One step per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "readyInMinutes",
											"value": "60",
											"description": "The number of minutes it takes to get the recipe on the table.",
											"type": "text"
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings the recipe makes.",
											"type": "text"
										},
										{
											"key": "mask",
											"value": "ellipseMask",
											"description": "The mask to put over the recipe image (\"ellipseMask\", \"diamondMask\", \"starMask\", \"heartMask\", \"potMask\", \"fishMask\").",
											"type": "text"
										},
										{
											"key": "backgroundImage",
											"value": "background1",
											"description": "The background image (\"none\",\"background1\", or \"background2\").",
											"type": "text"
										},
										{
											"key": "author",
											"value": "Anna Banana",
											"description": "The author of the recipe.",
											"type": "text"
										},
										{
											"key": "backgroundColor",
											"value": "#ffffff",
											"description": "The background color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "fontColor",
											"value": "#333333",
											"description": "The font color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "source",
											"value": "spoonacular.com",
											"description": "The source of the recipe.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeRecipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeRecipe"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "My recipe",
											"description": "The title of the recipe.",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"description": "The binary image of the recipe as jpg.",
											"type": "text"
										},
										{
											"key": "ingredients",
											"value": "2 cups of green beans",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "instructions",
											"value": "cook the beans",
											"description": "The instructions to make the recipe. One step per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "readyInMinutes",
											"value": "60",
											"description": "The number of minutes it takes to get the recipe on the table.",
											"type": "text"
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings the recipe makes.",
											"type": "text"
										},
										{
											"key": "mask",
											"value": "ellipseMask",
											"description": "The mask to put over the recipe image (\"ellipseMask\", \"diamondMask\", \"starMask\", \"heartMask\", \"potMask\", \"fishMask\").",
											"type": "text"
										},
										{
											"key": "backgroundImage",
											"value": "background1",
											"description": "The background image (\"none\",\"background1\", or \"background2\").",
											"type": "text"
										},
										{
											"key": "author",
											"value": "Anna Banana",
											"description": "The author of the recipe.",
											"type": "text"
										},
										{
											"key": "backgroundColor",
											"value": "#ffffff",
											"description": "The background color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "fontColor",
											"value": "#333333",
											"description": "The font color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "source",
											"value": "spoonacular.com",
											"description": "The source of the recipe.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeRecipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeRecipe"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "My recipe",
											"description": "The title of the recipe.",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"description": "The binary image of the recipe as jpg.",
											"type": "text"
										},
										{
											"key": "ingredients",
											"value": "2 cups of green beans",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "instructions",
											"value": "cook the beans",
											"description": "The instructions to make the recipe. One step per line (separate lines with \\n).",
											"type": "text"
										},
										{
											"key": "readyInMinutes",
											"value": "60",
											"description": "The number of minutes it takes to get the recipe on the table.",
											"type": "text"
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings the recipe makes.",
											"type": "text"
										},
										{
											"key": "mask",
											"value": "ellipseMask",
											"description": "The mask to put over the recipe image (\"ellipseMask\", \"diamondMask\", \"starMask\", \"heartMask\", \"potMask\", \"fishMask\").",
											"type": "text"
										},
										{
											"key": "backgroundImage",
											"value": "background1",
											"description": "The background image (\"none\",\"background1\", or \"background2\").",
											"type": "text"
										},
										{
											"key": "author",
											"value": "Anna Banana",
											"description": "The author of the recipe.",
											"type": "text"
										},
										{
											"key": "backgroundColor",
											"value": "#ffffff",
											"description": "The background color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "fontColor",
											"value": "#333333",
											"description": "The font color for the recipe card as a hex-string.",
											"type": "text"
										},
										{
											"key": "source",
											"value": "spoonacular.com",
											"description": "The source of the recipe.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeRecipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeRecipe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Analyze Recipe Instructions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "instructions",
									"value": "<string>",
									"description": "The instructions to be analyzed."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/analyzeInstructions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"analyzeInstructions"
							]
						},
						"description": "This endpoint allows you to break down instructions into atomic steps. Furthermore, each step will contain the ingredients and equipment required. Additionally, all ingredients and equipment from the recipe's instructions will be extracted independently of the step they're used in."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Put the garlic in a pan and then add the onion. Add some salt and oregano.",
											"description": "The instructions to be analyzed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/analyzeInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"analyzeInstructions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Put the garlic in a pan and then add the onion. Add some salt and oregano.",
											"description": "The instructions to be analyzed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/analyzeInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"analyzeInstructions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Put the garlic in a pan and then add the onion. Add some salt and oregano.",
											"description": "The instructions to be analyzed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/analyzeInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"analyzeInstructions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "instructions",
											"value": "Put the garlic in a pan and then add the onion. Add some salt and oregano.",
											"description": "The instructions to be analyzed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/analyzeInstructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"analyzeInstructions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Classify Cuisine",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "<string>",
									"description": "The title of the recipe."
								},
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n)."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/cuisine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"cuisine"
							]
						},
						"description": "Classify the recipe's cuisine."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Pork roast with green beans",
											"description": "The title of the recipe."
										},
										{
											"key": "ingredientList",
											"value": "3 oz pork shoulder",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n)."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/cuisine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"cuisine"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Pork roast with green beans",
											"description": "The title of the recipe."
										},
										{
											"key": "ingredientList",
											"value": "3 oz pork shoulder",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n)."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/cuisine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"cuisine"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Pork roast with green beans",
											"description": "The title of the recipe."
										},
										{
											"key": "ingredientList",
											"value": "3 oz pork shoulder",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n)."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/cuisine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"cuisine"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Pork roast with green beans",
											"description": "The title of the recipe."
										},
										{
											"key": "ingredientList",
											"value": "3 oz pork shoulder",
											"description": "The ingredient list of the recipe, one ingredient per line (separate lines with \\n)."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/cuisine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"cuisine"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Analyze a Recipe Search Query",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/queries/analyze?q=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"queries",
								"analyze"
							],
							"query": [
								{
									"key": "q",
									"value": "<string>",
									"description": "(Required) The recipe search query."
								}
							]
						},
						"description": "Parse a recipe search query to find out its intention."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/queries/analyze?q=salmon with fusilli and no nuts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"queries",
										"analyze"
									],
									"query": [
										{
											"key": "q",
											"value": "salmon with fusilli and no nuts"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/queries/analyze?q=salmon with fusilli and no nuts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"queries",
										"analyze"
									],
									"query": [
										{
											"key": "q",
											"value": "salmon with fusilli and no nuts"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/queries/analyze?q=salmon with fusilli and no nuts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"queries",
										"analyze"
									],
									"query": [
										{
											"key": "q",
											"value": "salmon with fusilli and no nuts"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/queries/analyze?q=salmon with fusilli and no nuts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"queries",
										"analyze"
									],
									"query": [
										{
											"key": "q",
											"value": "salmon with fusilli and no nuts"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Convert Amounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/convert?ingredientName=<string>&sourceAmount=<number>&sourceUnit=<string>&targetUnit=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"convert"
							],
							"query": [
								{
									"key": "ingredientName",
									"value": "<string>",
									"description": "(Required) The ingredient which you want to convert."
								},
								{
									"key": "sourceAmount",
									"value": "<number>",
									"description": "(Required) The amount from which you want to convert, e.g. the 2.5 in \"2.5 cups of flour to grams\"."
								},
								{
									"key": "sourceUnit",
									"value": "<string>",
									"description": "(Required) The unit from which you want to convert, e.g. the grams in \"2.5 cups of flour to grams\". You can also use \"piece\", e.g. \"3.4 oz tomatoes to piece\""
								},
								{
									"key": "targetUnit",
									"value": "<string>",
									"description": "(Required) The unit to which you want to convert, e.g. the grams in \"2.5 cups of flour to grams\". You can also use \"piece\", e.g. \"3.4 oz tomatoes to piece\""
								}
							]
						},
						"description": "Convert amounts like \"2 cups of flour to grams\"."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/convert?ingredientName=flour&sourceAmount=2.5&sourceUnit=cups&targetUnit=grams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"convert"
									],
									"query": [
										{
											"key": "ingredientName",
											"value": "flour"
										},
										{
											"key": "sourceAmount",
											"value": "2.5"
										},
										{
											"key": "sourceUnit",
											"value": "cups"
										},
										{
											"key": "targetUnit",
											"value": "grams"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/convert?ingredientName=flour&sourceAmount=2.5&sourceUnit=cups&targetUnit=grams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"convert"
									],
									"query": [
										{
											"key": "ingredientName",
											"value": "flour"
										},
										{
											"key": "sourceAmount",
											"value": "2.5"
										},
										{
											"key": "sourceUnit",
											"value": "cups"
										},
										{
											"key": "targetUnit",
											"value": "grams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/convert?ingredientName=flour&sourceAmount=2.5&sourceUnit=cups&targetUnit=grams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"convert"
									],
									"query": [
										{
											"key": "ingredientName",
											"value": "flour"
										},
										{
											"key": "sourceAmount",
											"value": "2.5"
										},
										{
											"key": "sourceUnit",
											"value": "cups"
										},
										{
											"key": "targetUnit",
											"value": "grams"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/convert?ingredientName=flour&sourceAmount=2.5&sourceUnit=cups&targetUnit=grams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"convert"
									],
									"query": [
										{
											"key": "ingredientName",
											"value": "flour"
										},
										{
											"key": "sourceAmount",
											"value": "2.5"
										},
										{
											"key": "sourceUnit",
											"value": "cups"
										},
										{
											"key": "targetUnit",
											"value": "grams"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Parse Ingredients",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line."
								},
								{
									"key": "servings",
									"value": "<number>",
									"description": "The number of servings that you can make from the ingredients."
								},
								{
									"key": "includeNutrition",
									"value": "<boolean>",
									"description": "Whether nutrition data should be added to correctly parsed ingredients."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/parseIngredients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"parseIngredients"
							]
						},
						"description": "Extract an ingredient from plain text."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 cup green tea",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "1",
											"description": "The number of servings that you can make from the ingredients."
										},
										{
											"key": "includeNutrition",
											"value": "true",
											"description": "Whether nutrition data should be added to correctly parsed ingredients."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/parseIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"parseIngredients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 cup green tea",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "1",
											"description": "The number of servings that you can make from the ingredients."
										},
										{
											"key": "includeNutrition",
											"value": "true",
											"description": "Whether nutrition data should be added to correctly parsed ingredients."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/parseIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"parseIngredients"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 cup green tea",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "1",
											"description": "The number of servings that you can make from the ingredients."
										},
										{
											"key": "includeNutrition",
											"value": "true",
											"description": "Whether nutrition data should be added to correctly parsed ingredients."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/parseIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"parseIngredients"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "1 cup green tea",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "1",
											"description": "The number of servings that you can make from the ingredients."
										},
										{
											"key": "includeNutrition",
											"value": "true",
											"description": "Whether nutrition data should be added to correctly parsed ingredients."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/parseIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"parseIngredients"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Visualize Ingredients",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ingredientList",
									"value": "<string>",
									"description": "The ingredient list of the recipe, one ingredient per line."
								},
								{
									"key": "servings",
									"value": "<number>",
									"description": "The number of servings."
								},
								{
									"key": "measure",
									"value": "<string>",
									"description": "The original system of measurement, either \"metric\" or \"us\"."
								},
								{
									"key": "view",
									"value": "<string>",
									"description": "How to visualize the ingredients, either \"grid\" or \"list\"."
								},
								{
									"key": "defaultCss",
									"value": "<boolean>",
									"description": "Whether the default CSS should be added to the response."
								},
								{
									"key": "showBacklink",
									"value": "<boolean>",
									"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/recipes/visualizeIngredients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"visualizeIngredients"
							]
						},
						"description": "Visualize ingredients of a recipe. You can play around with that endpoint!"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "measure",
											"value": "metric",
											"description": "The original system of measurement, either \"metric\" or \"us\"."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the ingredients, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeIngredients"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "measure",
											"value": "metric",
											"description": "The original system of measurement, either \"metric\" or \"us\"."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the ingredients, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeIngredients"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "measure",
											"value": "metric",
											"description": "The original system of measurement, either \"metric\" or \"us\"."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the ingredients, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeIngredients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "reprehenderit esse"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ingredientList",
											"value": "3 oz flour",
											"description": "The ingredient list of the recipe, one ingredient per line."
										},
										{
											"key": "servings",
											"value": "2",
											"description": "The number of servings."
										},
										{
											"key": "measure",
											"value": "metric",
											"description": "The original system of measurement, either \"metric\" or \"us\"."
										},
										{
											"key": "view",
											"value": "grid",
											"description": "How to visualize the ingredients, either \"grid\" or \"list\"."
										},
										{
											"key": "defaultCss",
											"value": "true",
											"description": "Whether the default CSS should be added to the response."
										},
										{
											"key": "showBacklink",
											"value": "true",
											"description": "Whether to show a backlink to spoonacular. If set false, this call counts against your quota."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/recipes/visualizeIngredients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"visualizeIngredients"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Guess Nutrition by Dish Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/guessNutrition?title=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"guessNutrition"
							],
							"query": [
								{
									"key": "title",
									"value": "<string>",
									"description": "(Required) The title of the dish."
								}
							]
						},
						"description": "Estimate the macronutrients of a dish based on its title."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/guessNutrition?title=Spaghetti Aglio et Olio",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"guessNutrition"
									],
									"query": [
										{
											"key": "title",
											"value": "Spaghetti Aglio et Olio"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/guessNutrition?title=Spaghetti Aglio et Olio",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"guessNutrition"
									],
									"query": [
										{
											"key": "title",
											"value": "Spaghetti Aglio et Olio"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/guessNutrition?title=Spaghetti Aglio et Olio",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"guessNutrition"
									],
									"query": [
										{
											"key": "title",
											"value": "Spaghetti Aglio et Olio"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/guessNutrition?title=Spaghetti Aglio et Olio",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"guessNutrition"
									],
									"query": [
										{
											"key": "title",
											"value": "Spaghetti Aglio et Olio"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Quick Answer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes/quickAnswer?q=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes",
								"quickAnswer"
							],
							"query": [
								{
									"key": "q",
									"value": "<string>",
									"description": "(Required) The nutrition related question."
								}
							]
						},
						"description": "Answer a nutrition related natural language question."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/quickAnswer?q=How much vitamin c is in 2 apples?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"quickAnswer"
									],
									"query": [
										{
											"key": "q",
											"value": "How much vitamin c is in 2 apples?"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/quickAnswer?q=How much vitamin c is in 2 apples?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"quickAnswer"
									],
									"query": [
										{
											"key": "q",
											"value": "How much vitamin c is in 2 apples?"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/quickAnswer?q=How much vitamin c is in 2 apples?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"quickAnswer"
									],
									"query": [
										{
											"key": "q",
											"value": "How much vitamin c is in 2 apples?"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipes/quickAnswer?q=How much vitamin c is in 2 apples?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipes",
										"quickAnswer"
									],
									"query": [
										{
											"key": "q",
											"value": "How much vitamin c is in 2 apples?"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "food",
			"item": [
				{
					"name": "ingredients",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Ingredient Substitutes by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/:id/substitutes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												":id",
												"substitutes"
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The id of the ingredient you want substitutes for."
												}
											]
										},
										"description": "Search for substitutes for a given ingredient."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/substitutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"substitutes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/substitutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"substitutes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/substitutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"substitutes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/substitutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"substitutes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Ingredient Information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/:id/information?amount=<number>&unit=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												":id",
												"information"
											],
											"query": [
												{
													"key": "amount",
													"value": "<number>",
													"description": "The amount of this ingredient."
												},
												{
													"key": "unit",
													"value": "<string>",
													"description": "The unit for the given amount."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The ingredient id."
												}
											]
										},
										"description": "Use an ingredient id to get all available information about an ingredient, such as its image and supermarket aisle."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/information?amount=150&unit=grams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"information"
													],
													"query": [
														{
															"key": "amount",
															"value": "150"
														},
														{
															"key": "unit",
															"value": "grams"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/information?amount=150&unit=grams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"information"
													],
													"query": [
														{
															"key": "amount",
															"value": "150"
														},
														{
															"key": "unit",
															"value": "grams"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/information?amount=150&unit=grams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"information"
													],
													"query": [
														{
															"key": "amount",
															"value": "150"
														},
														{
															"key": "unit",
															"value": "grams"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/ingredients/:id/information?amount=150&unit=grams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"ingredients",
														":id",
														"information"
													],
													"query": [
														{
															"key": "amount",
															"value": "150"
														},
														{
															"key": "unit",
															"value": "grams"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "Compute Glycemic Load",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/food/ingredients/glycemicLoad",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"ingredients",
										"glycemicLoad"
									]
								},
								"description": "Retrieve the glycemic index for a list of ingredients and compute the individual and total glycemic load."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/glycemicLoad",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"glycemicLoad"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/glycemicLoad",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"glycemicLoad"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/glycemicLoad",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"glycemicLoad"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/glycemicLoad",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"glycemicLoad"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Autocomplete Ingredient Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/ingredients/autocomplete?query=<string>&number=<number>&metaInformation=<boolean>&intolerances=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"ingredients",
										"autocomplete"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The partial or full ingredient name."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of results to return (between 1 and 100)."
										},
										{
											"key": "metaInformation",
											"value": "<boolean>",
											"description": "Whether to return more meta information about the ingredients."
										},
										{
											"key": "intolerances",
											"value": "<string>",
											"description": "A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full list of supported intolerances."
										}
									]
								},
								"description": "Autocomplete the entry of an ingredient."
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/autocomplete?query=appl&number=10&metaInformation=false&intolerances=egg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "appl"
												},
												{
													"key": "number",
													"value": "10"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/autocomplete?query=appl&number=10&metaInformation=false&intolerances=egg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "appl"
												},
												{
													"key": "number",
													"value": "10"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/autocomplete?query=appl&number=10&metaInformation=false&intolerances=egg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "appl"
												},
												{
													"key": "number",
													"value": "10"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/autocomplete?query=appl&number=10&metaInformation=false&intolerances=egg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "appl"
												},
												{
													"key": "number",
													"value": "10"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Ingredient Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/ingredients/search?query=<string>&addChildren=<boolean>&minProteinPercent=<number>&maxProteinPercent=<number>&minFatPercent=<number>&maxFatPercent=<number>&minCarbsPercent=<number>&maxCarbsPercent=<number>&metaInformation=<boolean>&intolerances=<string>&sort=<string>&sortDirection=<string>&offset=<number>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"ingredients",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The partial or full ingredient name."
										},
										{
											"key": "addChildren",
											"value": "<boolean>",
											"description": "Whether to add children of found foods."
										},
										{
											"key": "minProteinPercent",
											"value": "<number>",
											"description": "The minimum percentage of protein the food must have (between 0 and 100)."
										},
										{
											"key": "maxProteinPercent",
											"value": "<number>",
											"description": "The maximum percentage of protein the food can have (between 0 and 100)."
										},
										{
											"key": "minFatPercent",
											"value": "<number>",
											"description": "The minimum percentage of fat the food must have (between 0 and 100)."
										},
										{
											"key": "maxFatPercent",
											"value": "<number>",
											"description": "The maximum percentage of fat the food can have (between 0 and 100)."
										},
										{
											"key": "minCarbsPercent",
											"value": "<number>",
											"description": "The minimum percentage of carbs the food must have (between 0 and 100)."
										},
										{
											"key": "maxCarbsPercent",
											"value": "<number>",
											"description": "The maximum percentage of carbs the food can have (between 0 and 100)."
										},
										{
											"key": "metaInformation",
											"value": "<boolean>",
											"description": "Whether to return more meta information about the ingredients."
										},
										{
											"key": "intolerances",
											"value": "<string>",
											"description": "A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full list of supported intolerances."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The strategy to sort recipes by. See a full list of supported sorting options."
										},
										{
											"key": "sortDirection",
											"value": "<string>",
											"description": "The direction in which to sort. Must be either 'asc' (ascending) or 'desc' (descending)."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "The number of results to skip (between 0 and 990)."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of expected results (between 1 and 100)."
										}
									]
								},
								"description": "Search for simple whole foods (e.g. fruits, vegetables, nuts, grains, meat, fish, dairy etc.)."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/search?query=apple&addChildren=true&minProteinPercent=10&maxProteinPercent=90&minFatPercent=10&maxFatPercent=90&minCarbsPercent=10&maxCarbsPercent=90&metaInformation=false&intolerances=egg&sort=calories&sortDirection=asc&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "apple"
												},
												{
													"key": "addChildren",
													"value": "true"
												},
												{
													"key": "minProteinPercent",
													"value": "10"
												},
												{
													"key": "maxProteinPercent",
													"value": "90"
												},
												{
													"key": "minFatPercent",
													"value": "10"
												},
												{
													"key": "maxFatPercent",
													"value": "90"
												},
												{
													"key": "minCarbsPercent",
													"value": "10"
												},
												{
													"key": "maxCarbsPercent",
													"value": "90"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												},
												{
													"key": "sort",
													"value": "calories"
												},
												{
													"key": "sortDirection",
													"value": "asc"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/search?query=apple&addChildren=true&minProteinPercent=10&maxProteinPercent=90&minFatPercent=10&maxFatPercent=90&minCarbsPercent=10&maxCarbsPercent=90&metaInformation=false&intolerances=egg&sort=calories&sortDirection=asc&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "apple"
												},
												{
													"key": "addChildren",
													"value": "true"
												},
												{
													"key": "minProteinPercent",
													"value": "10"
												},
												{
													"key": "maxProteinPercent",
													"value": "90"
												},
												{
													"key": "minFatPercent",
													"value": "10"
												},
												{
													"key": "maxFatPercent",
													"value": "90"
												},
												{
													"key": "minCarbsPercent",
													"value": "10"
												},
												{
													"key": "maxCarbsPercent",
													"value": "90"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												},
												{
													"key": "sort",
													"value": "calories"
												},
												{
													"key": "sortDirection",
													"value": "asc"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/search?query=apple&addChildren=true&minProteinPercent=10&maxProteinPercent=90&minFatPercent=10&maxFatPercent=90&minCarbsPercent=10&maxCarbsPercent=90&metaInformation=false&intolerances=egg&sort=calories&sortDirection=asc&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "apple"
												},
												{
													"key": "addChildren",
													"value": "true"
												},
												{
													"key": "minProteinPercent",
													"value": "10"
												},
												{
													"key": "maxProteinPercent",
													"value": "90"
												},
												{
													"key": "minFatPercent",
													"value": "10"
												},
												{
													"key": "maxFatPercent",
													"value": "90"
												},
												{
													"key": "minCarbsPercent",
													"value": "10"
												},
												{
													"key": "maxCarbsPercent",
													"value": "90"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												},
												{
													"key": "sort",
													"value": "calories"
												},
												{
													"key": "sortDirection",
													"value": "asc"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/search?query=apple&addChildren=true&minProteinPercent=10&maxProteinPercent=90&minFatPercent=10&maxFatPercent=90&minCarbsPercent=10&maxCarbsPercent=90&metaInformation=false&intolerances=egg&sort=calories&sortDirection=asc&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "apple"
												},
												{
													"key": "addChildren",
													"value": "true"
												},
												{
													"key": "minProteinPercent",
													"value": "10"
												},
												{
													"key": "maxProteinPercent",
													"value": "90"
												},
												{
													"key": "minFatPercent",
													"value": "10"
												},
												{
													"key": "maxFatPercent",
													"value": "90"
												},
												{
													"key": "minCarbsPercent",
													"value": "10"
												},
												{
													"key": "maxCarbsPercent",
													"value": "90"
												},
												{
													"key": "metaInformation",
													"value": "false"
												},
												{
													"key": "intolerances",
													"value": "egg"
												},
												{
													"key": "sort",
													"value": "calories"
												},
												{
													"key": "sortDirection",
													"value": "asc"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Ingredient Substitutes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/ingredients/substitutes?ingredientName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"ingredients",
										"substitutes"
									],
									"query": [
										{
											"key": "ingredientName",
											"value": "<string>",
											"description": "(Required) The name of the ingredient you want to replace."
										}
									]
								},
								"description": "Search for substitutes for a given ingredient."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/substitutes?ingredientName=butter",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"substitutes"
											],
											"query": [
												{
													"key": "ingredientName",
													"value": "butter"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/substitutes?ingredientName=butter",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"substitutes"
											],
											"query": [
												{
													"key": "ingredientName",
													"value": "butter"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/substitutes?ingredientName=butter",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"substitutes"
											],
											"query": [
												{
													"key": "ingredientName",
													"value": "butter"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/substitutes?ingredientName=butter",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"substitutes"
											],
											"query": [
												{
													"key": "ingredientName",
													"value": "butter"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Map Ingredients to Grocery Products",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/food/ingredients/map",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"ingredients",
										"map"
									]
								},
								"description": "Map a set of ingredients to products you can buy in the grocery store."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"map"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"map"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"map"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/ingredients/map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"ingredients",
												"map"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "products",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Product Information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The id of the packaged food."
												}
											]
										},
										"description": "Use a product id to get full information about a product, such as ingredients, nutrition, etc. The nutritional information is per serving."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Visualize Product Nutrition by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/:id/nutritionWidget?defaultCss=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "<boolean>",
													"description": "Whether the default CSS should be added to the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The id of the product."
												}
											]
										},
										"description": "Visualize a product's nutritional information as HTML including CSS."
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/html"
												}
											],
											"cookie": [],
											"body": "reprehenderit esse"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "upc/{upc}",
							"item": [
								{
									"name": "Search Grocery Products by UPC",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/upc/:upc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"upc",
												":upc"
											],
											"variable": [
												{
													"key": "upc",
													"value": "<number>",
													"description": "(Required) The product's UPC."
												}
											]
										},
										"description": "Get information about a packaged food using its UPC."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Comparable Products",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/upc/:upc/comparable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"upc",
												":upc",
												"comparable"
											],
											"variable": [
												{
													"key": "upc",
													"value": "<number>",
													"description": "(Required) The UPC of the product for which you want to find comparable products."
												}
											]
										},
										"description": "Find comparable products to the given one."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc/comparable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc",
														"comparable"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc/comparable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc",
														"comparable"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc/comparable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc",
														"comparable"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/products/upc/:upc/comparable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"products",
														"upc",
														":upc",
														"comparable"
													],
													"variable": [
														{
															"key": "upc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "Search Grocery Products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/products/search?query=<string>&minCalories=<number>&maxCalories=<number>&minCarbs=<number>&maxCarbs=<number>&minProtein=<number>&maxProtein=<number>&minFat=<number>&maxFat=<number>&offset=<number>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"products",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The search query."
										},
										{
											"key": "minCalories",
											"value": "<number>",
											"description": "The minimum amount of calories the product must have."
										},
										{
											"key": "maxCalories",
											"value": "<number>",
											"description": "The maximum amount of calories the product can have."
										},
										{
											"key": "minCarbs",
											"value": "<number>",
											"description": "The minimum amount of carbohydrates in grams the product must have."
										},
										{
											"key": "maxCarbs",
											"value": "<number>",
											"description": "The maximum amount of carbohydrates in grams the product can have."
										},
										{
											"key": "minProtein",
											"value": "<number>",
											"description": "The minimum amount of protein in grams the product must have."
										},
										{
											"key": "maxProtein",
											"value": "<number>",
											"description": "The maximum amount of protein in grams the product can have."
										},
										{
											"key": "minFat",
											"value": "<number>",
											"description": "The minimum amount of fat in grams the product must have."
										},
										{
											"key": "maxFat",
											"value": "<number>",
											"description": "The maximum amount of fat in grams the product can have."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "The number of results to skip (between 0 and 990)."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of expected results (between 1 and 100)."
										}
									]
								},
								"description": "Search packaged food products, such as frozen pizza or Greek yogurt."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/search?query=greek yogurt&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "greek yogurt"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/search?query=greek yogurt&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "greek yogurt"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/search?query=greek yogurt&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "greek yogurt"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/search?query=greek yogurt&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "greek yogurt"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Autocomplete Product Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/products/suggest?query=<string>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"products",
										"suggest"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The (partial) search query."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of results to return (between 1 and 25)."
										}
									]
								},
								"description": "Generate suggestions for grocery products based on a (partial) query. The matches will be found by looking in the title only."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/products/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Classify Grocery Product",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locale\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/food/products/classify?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"products",
										"classify"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>",
											"description": "The display name of the returned category, supported is en_US (for American English) and en_GB (for British English)."
										}
									]
								},
								"description": "This endpoint allows you to match a packaged food to a basic category, e.g. a specific brand of milk to the category milk."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classify?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classify"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classify?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classify"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classify?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classify"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classify?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classify"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Classify Grocery Product Bulk",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locale\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/food/products/classifyBatch?locale=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"products",
										"classifyBatch"
									],
									"query": [
										{
											"key": "locale",
											"value": "<string>",
											"description": "The display name of the returned category, supported is en_US (for American English) and en_GB (for British English)."
										}
									]
								},
								"description": "Provide a set of product jsons, get back classified products."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classifyBatch?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classifyBatch"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classifyBatch?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classifyBatch"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classifyBatch?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classifyBatch"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/food/products/classifyBatch?locale=en_US",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"products",
												"classifyBatch"
											],
											"query": [
												{
													"key": "locale",
													"value": "en_US"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "menu Items",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Menu Item Information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The menu item id."
												}
											]
										},
										"description": "Use a menu item id to get all available information about a menu item, such as nutrition."
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Visualize Menu Item Nutrition by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/:id/nutritionWidget?defaultCss=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												":id",
												"nutritionWidget"
											],
											"query": [
												{
													"key": "defaultCss",
													"value": "<boolean>",
													"description": "Whether the default CSS should be added to the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The menu item id."
												}
											]
										},
										"description": "Visualize a menu item's nutritional information as HTML including CSS."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/html"
												}
											],
											"cookie": [],
											"body": "reprehenderit esse"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/food/menuItems/:id/nutritionWidget?defaultCss=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"food",
														"menuItems",
														":id",
														"nutritionWidget"
													],
													"query": [
														{
															"key": "defaultCss",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Autocomplete Menu Item Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/menuItems/suggest?query=<string>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"menuItems",
										"suggest"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The (partial) search query."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of results to return (between 1 and 25)."
										}
									]
								},
								"description": "Generate suggestions for menu items based on a (partial) query. The matches will be found by looking in the title only."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/suggest?query=chicke&number=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "chicke"
												},
												{
													"key": "number",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Search Menu Items",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/menuItems/search?query=<string>&minCalories=<number>&maxCalories=<number>&minCarbs=<number>&maxCarbs=<number>&minProtein=<number>&maxProtein=<number>&minFat=<number>&maxFat=<number>&offset=<number>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"menuItems",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) The search query."
										},
										{
											"key": "minCalories",
											"value": "<number>",
											"description": "The minimum amount of calories the menu item must have."
										},
										{
											"key": "maxCalories",
											"value": "<number>",
											"description": "The maximum amount of calories the menu item can have."
										},
										{
											"key": "minCarbs",
											"value": "<number>",
											"description": "The minimum amount of carbohydrates in grams the menu item must have."
										},
										{
											"key": "maxCarbs",
											"value": "<number>",
											"description": "The maximum amount of carbohydrates in grams the menu item can have."
										},
										{
											"key": "minProtein",
											"value": "<number>",
											"description": "The minimum amount of protein in grams the menu item must have."
										},
										{
											"key": "maxProtein",
											"value": "<number>",
											"description": "The maximum amount of protein in grams the menu item can have."
										},
										{
											"key": "minFat",
											"value": "<number>",
											"description": "The minimum amount of fat in grams the menu item must have."
										},
										{
											"key": "maxFat",
											"value": "<number>",
											"description": "The maximum amount of fat in grams the menu item can have."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "The offset number for paging (between 0 and 990)."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of expected results (between 1 and 10)."
										}
									]
								},
								"description": "Search over 115,000 menu items from over 800 fast food and chain restaurants. For example, McDonald's Big Mac or Starbucks Mocha."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/search?query=snickers&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "snickers"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "100"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/search?query=snickers&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "snickers"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/search?query=snickers&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "snickers"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "100"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/menuItems/search?query=snickers&minCalories=50&maxCalories=800&minCarbs=10&maxCarbs=100&minProtein=10&maxProtein=100&minFat=1&maxFat=100&offset=0&number=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"menuItems",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "snickers"
												},
												{
													"key": "minCalories",
													"value": "50"
												},
												{
													"key": "maxCalories",
													"value": "800"
												},
												{
													"key": "minCarbs",
													"value": "10"
												},
												{
													"key": "maxCarbs",
													"value": "100"
												},
												{
													"key": "minProtein",
													"value": "10"
												},
												{
													"key": "maxProtein",
													"value": "100"
												},
												{
													"key": "minFat",
													"value": "1"
												},
												{
													"key": "maxFat",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "number",
													"value": "100"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "wine",
					"item": [
						{
							"name": "Get Dish Pairing for Wine",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/wine/dishes?wine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"wine",
										"dishes"
									],
									"query": [
										{
											"key": "wine",
											"value": "<string>",
											"description": "(Required) The type of wine that should be paired, e.g. \"merlot\", \"riesling\", or \"malbec\"."
										}
									]
								},
								"description": "Find a dish that goes well with a given wine."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/dishes?wine=malbec",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"dishes"
											],
											"query": [
												{
													"key": "wine",
													"value": "malbec"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/dishes?wine=malbec",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"dishes"
											],
											"query": [
												{
													"key": "wine",
													"value": "malbec"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/dishes?wine=malbec",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"dishes"
											],
											"query": [
												{
													"key": "wine",
													"value": "malbec"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/dishes?wine=malbec",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"dishes"
											],
											"query": [
												{
													"key": "wine",
													"value": "malbec"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Wine Pairing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/wine/pairing?food=<string>&maxPrice=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"wine",
										"pairing"
									],
									"query": [
										{
											"key": "food",
											"value": "<string>",
											"description": "(Required) The food to get a pairing for. This can be a dish (\"steak\"), an ingredient (\"salmon\"), or a cuisine (\"italian\")."
										},
										{
											"key": "maxPrice",
											"value": "<number>",
											"description": "The maximum price for the specific wine recommendation in USD."
										}
									]
								},
								"description": "Find a wine that goes well with a food. Food can be a dish name (\"steak\"), an ingredient name (\"salmon\"), or a cuisine (\"italian\")."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/pairing?food=steak&maxPrice=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"pairing"
											],
											"query": [
												{
													"key": "food",
													"value": "steak"
												},
												{
													"key": "maxPrice",
													"value": "50"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/pairing?food=steak&maxPrice=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"pairing"
											],
											"query": [
												{
													"key": "food",
													"value": "steak"
												},
												{
													"key": "maxPrice",
													"value": "50"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/pairing?food=steak&maxPrice=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"pairing"
											],
											"query": [
												{
													"key": "food",
													"value": "steak"
												},
												{
													"key": "maxPrice",
													"value": "50"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/pairing?food=steak&maxPrice=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"pairing"
											],
											"query": [
												{
													"key": "food",
													"value": "steak"
												},
												{
													"key": "maxPrice",
													"value": "50"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Wine Description",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/wine/description?wine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"wine",
										"description"
									],
									"query": [
										{
											"key": "wine",
											"value": "<string>",
											"description": "(Required) The name of the wine that should be paired, e.g. \"merlot\", \"riesling\", or \"malbec\"."
										}
									]
								},
								"description": "Get a simple description of a certain wine, e.g. \"malbec\", \"riesling\", or \"merlot\"."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/description?wine=merlot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"description"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/description?wine=merlot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"description"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/description?wine=merlot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"description"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/description?wine=merlot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"description"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Wine Recommendation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/wine/recommendation?wine=<string>&maxPrice=<number>&minRating=<number>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"wine",
										"recommendation"
									],
									"query": [
										{
											"key": "wine",
											"value": "<string>",
											"description": "(Required) The type of wine to get a specific product recommendation for."
										},
										{
											"key": "maxPrice",
											"value": "<number>",
											"description": "The maximum price for the specific wine recommendation in USD."
										},
										{
											"key": "minRating",
											"value": "<number>",
											"description": "The minimum rating of the recommended wine between 0 and 1. For example, 0.8 equals 4 out of 5 stars."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of wine recommendations expected (between 1 and 100)."
										}
									]
								},
								"description": "Get a specific wine recommendation (concrete product) for a given wine type, e.g. \"merlot\"."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/recommendation?wine=merlot&maxPrice=50&minRating=0.7&number=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"recommendation"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												},
												{
													"key": "maxPrice",
													"value": "50"
												},
												{
													"key": "minRating",
													"value": "0.7"
												},
												{
													"key": "number",
													"value": "3"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/recommendation?wine=merlot&maxPrice=50&minRating=0.7&number=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"recommendation"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												},
												{
													"key": "maxPrice",
													"value": "50"
												},
												{
													"key": "minRating",
													"value": "0.7"
												},
												{
													"key": "number",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/recommendation?wine=merlot&maxPrice=50&minRating=0.7&number=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"recommendation"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												},
												{
													"key": "maxPrice",
													"value": "50"
												},
												{
													"key": "minRating",
													"value": "0.7"
												},
												{
													"key": "number",
													"value": "3"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/wine/recommendation?wine=merlot&maxPrice=50&minRating=0.7&number=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"wine",
												"recommendation"
											],
											"query": [
												{
													"key": "wine",
													"value": "merlot"
												},
												{
													"key": "maxPrice",
													"value": "50"
												},
												{
													"key": "minRating",
													"value": "0.7"
												},
												{
													"key": "number",
													"value": "3"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "images",
					"item": [
						{
							"name": "Image Classification by URL",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/images/classify?imageUrl=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"images",
										"classify"
									],
									"query": [
										{
											"key": "imageUrl",
											"value": "<string>",
											"description": "(Required) The URL of the image to be classified."
										}
									]
								},
								"description": "Classify a food image. You can play around with that endpoint!"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/classify?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"classify"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/classify?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"classify"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/classify?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"classify"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/classify?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"classify"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Image Analysis by URL",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/images/analyze?imageUrl=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"images",
										"analyze"
									],
									"query": [
										{
											"key": "imageUrl",
											"value": "<string>",
											"description": "(Required) The URL of the image to be analyzed."
										}
									]
								},
								"description": "Analyze a food image. The API tries to classify the image, guess the nutrition, and find a matching recipes. You can play around with that endpoint!"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/analyze?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"analyze"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/analyze?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"analyze"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/analyze?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"analyze"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/images/analyze?imageUrl=https://spoonacular.com/recipeImages/635350-240x150.jpg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"images",
												"analyze"
											],
											"query": [
												{
													"key": "imageUrl",
													"value": "https://spoonacular.com/recipeImages/635350-240x150.jpg"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "converse",
					"item": [
						{
							"name": "Talk to Chatbot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/converse?text=<string>&contextId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"converse"
									],
									"query": [
										{
											"key": "text",
											"value": "<string>",
											"description": "(Required) The request / question / answer from the user to the chatbot."
										},
										{
											"key": "contextId",
											"value": "<string>",
											"description": "An arbitrary globally unique id for your conversation. The conversation can contain states so you should pass your context id if you want the bot to be able to remember the conversation."
										}
									]
								},
								"description": "This endpoint can be used to have a conversation about food with the spoonacular chatbot. Use the \"Get Conversation Suggests\" endpoint to show your user what he or she can say."
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse?text=donut recipes&contextId=342938",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse"
											],
											"query": [
												{
													"key": "text",
													"value": "donut recipes"
												},
												{
													"key": "contextId",
													"value": "342938"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse?text=donut recipes&contextId=342938",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse"
											],
											"query": [
												{
													"key": "text",
													"value": "donut recipes"
												},
												{
													"key": "contextId",
													"value": "342938"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse?text=donut recipes&contextId=342938",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse"
											],
											"query": [
												{
													"key": "text",
													"value": "donut recipes"
												},
												{
													"key": "contextId",
													"value": "342938"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse?text=donut recipes&contextId=342938",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse"
											],
											"query": [
												{
													"key": "text",
													"value": "donut recipes"
												},
												{
													"key": "contextId",
													"value": "342938"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Conversation Suggests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/converse/suggest?query=<string>&number=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"converse",
										"suggest"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "(Required) A (partial) query from the user. The endpoint will return if it matches topics it can talk about."
										},
										{
											"key": "number",
											"value": "<number>",
											"description": "The number of suggestions to return (between 1 and 25)."
										}
									]
								},
								"description": "This endpoint returns suggestions for things the user can say or ask the chatbot."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse/suggest?query=tell&number=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "tell"
												},
												{
													"key": "number",
													"value": "5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse/suggest?query=tell&number=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "tell"
												},
												{
													"key": "number",
													"value": "5"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse/suggest?query=tell&number=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "tell"
												},
												{
													"key": "number",
													"value": "5"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/food/converse/suggest?query=tell&number=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"food",
												"converse",
												"suggest"
											],
											"query": [
												{
													"key": "query",
													"value": "tell"
												},
												{
													"key": "number",
													"value": "5"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search Custom Foods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/customFoods/search?query=<string>&username=<string>&hash=<string>&offset=<number>&number=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"customFoods",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The search query."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) The username."
								},
								{
									"key": "hash",
									"value": "<string>",
									"description": "(Required) The private hash for the username."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The number of results to skip (between 0 and 990)."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of expected results (between 1 and 100)."
								}
							]
						},
						"description": "Search custom foods in a user's account."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/customFoods/search?query=brat&username=dsky&hash=4b5v4398573406&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"customFoods",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "brat"
										},
										{
											"key": "username",
											"value": "dsky"
										},
										{
											"key": "hash",
											"value": "4b5v4398573406"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/customFoods/search?query=brat&username=dsky&hash=4b5v4398573406&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"customFoods",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "brat"
										},
										{
											"key": "username",
											"value": "dsky"
										},
										{
											"key": "hash",
											"value": "4b5v4398573406"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/customFoods/search?query=brat&username=dsky&hash=4b5v4398573406&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"customFoods",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "brat"
										},
										{
											"key": "username",
											"value": "dsky"
										},
										{
											"key": "hash",
											"value": "4b5v4398573406"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/customFoods/search?query=brat&username=dsky&hash=4b5v4398573406&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"customFoods",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "brat"
										},
										{
											"key": "username",
											"value": "dsky"
										},
										{
											"key": "hash",
											"value": "4b5v4398573406"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Detect Food in Text",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "text",
									"value": "<string>",
									"description": "The text in which food items, such as dish names and ingredients, should be detected in."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/food/detect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"detect"
							]
						},
						"description": "Take any text and find all mentions of food contained within it. This task is also called Named Entity Recognition (NER). In this case, the entities are foods. Either dishes, such as pizza or cheeseburger, or ingredients, such as cucumber or almonds."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "text",
											"value": "I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too!",
											"description": "The text in which food items, such as dish names and ingredients, should be detected in."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/food/detect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"detect"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "text",
											"value": "I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too!",
											"description": "The text in which food items, such as dish names and ingredients, should be detected in."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/food/detect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"detect"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "text",
											"value": "I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too!",
											"description": "The text in which food items, such as dish names and ingredients, should be detected in."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/food/detect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"detect"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "text",
											"value": "I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too!",
											"description": "The text in which food items, such as dish names and ingredients, should be detected in."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/food/detect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"detect"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Search Site Content",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/site/search?query=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"site",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The query to search for. You can also use partial queries such as \"spagh\" to already find spaghetti recipes, articles, grocery products, and other content."
								}
							]
						},
						"description": "Search spoonacular's site content. You'll be able to find everything that you could also find using the search suggestions on spoonacular.com. This is a suggest API so you can send partial strings as queries."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/site/search?query=past",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"site",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "past"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/site/search?query=past",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"site",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "past"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/site/search?query=past",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"site",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "past"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/site/search?query=past",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"site",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "past"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search All Food",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/search?query=<string>&offset=<number>&number=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The search query."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The number of results to skip (between 0 and 990)."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of expected results (between 1 and 100)."
								}
							]
						},
						"description": "Search all food content with one call. That includes recipes, grocery products, menu items, simple foods (ingredients), and food videos."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/search?query=apple&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "apple"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/search?query=apple&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "apple"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/search?query=apple&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "apple"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/search?query=apple&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "apple"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search Food Videos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/videos/search?query=<string>&type=<string>&cuisine=<string>&diet=<string>&includeIngredients=<string>&excludeIngredients=<string>&minLength=<number>&maxLength=<number>&offset=<number>&number=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"videos",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The search query."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of the recipes. See a full list of supported meal types."
								},
								{
									"key": "cuisine",
									"value": "<string>",
									"description": "The cuisine(s) of the recipes. One or more, comma separated. See a full list of supported cuisines."
								},
								{
									"key": "diet",
									"value": "<string>",
									"description": "The diet for which the recipes must be suitable. See a full list of supported diets."
								},
								{
									"key": "includeIngredients",
									"value": "<string>",
									"description": "A comma-separated list of ingredients that the recipes should contain."
								},
								{
									"key": "excludeIngredients",
									"value": "<string>",
									"description": "A comma-separated list of ingredients or ingredient types that the recipes must not contain."
								},
								{
									"key": "minLength",
									"value": "<number>",
									"description": "Minimum video length in seconds."
								},
								{
									"key": "maxLength",
									"value": "<number>",
									"description": "Maximum video length in seconds."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The number of results to skip (between 0 and 900)."
								},
								{
									"key": "number",
									"value": "<number>",
									"description": "The number of results to return (between 1 and 100)."
								}
							]
						},
						"description": "Find recipe and other food related videos."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/videos/search?query=chicken soup&type=main course&cuisine=italian&diet=vegetarian&includeIngredients=tomato,cheese&excludeIngredients=eggs&minLength=0&maxLength=999&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"videos",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "chicken soup"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "minLength",
											"value": "0"
										},
										{
											"key": "maxLength",
											"value": "999"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/videos/search?query=chicken soup&type=main course&cuisine=italian&diet=vegetarian&includeIngredients=tomato,cheese&excludeIngredients=eggs&minLength=0&maxLength=999&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"videos",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "chicken soup"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "minLength",
											"value": "0"
										},
										{
											"key": "maxLength",
											"value": "999"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/videos/search?query=chicken soup&type=main course&cuisine=italian&diet=vegetarian&includeIngredients=tomato,cheese&excludeIngredients=eggs&minLength=0&maxLength=999&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"videos",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "chicken soup"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "minLength",
											"value": "0"
										},
										{
											"key": "maxLength",
											"value": "999"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/videos/search?query=chicken soup&type=main course&cuisine=italian&diet=vegetarian&includeIngredients=tomato,cheese&excludeIngredients=eggs&minLength=0&maxLength=999&offset=0&number=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"videos",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "chicken soup"
										},
										{
											"key": "type",
											"value": "main course"
										},
										{
											"key": "cuisine",
											"value": "italian"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "includeIngredients",
											"value": "tomato,cheese"
										},
										{
											"key": "excludeIngredients",
											"value": "eggs"
										},
										{
											"key": "minLength",
											"value": "0"
										},
										{
											"key": "maxLength",
											"value": "999"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "number",
											"value": "10"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Random Food Joke",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/jokes/random",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"jokes",
								"random"
							]
						},
						"description": "Get a random joke that is related to food. Caution: this is an endpoint for adults!"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/jokes/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"jokes",
										"random"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/jokes/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"jokes",
										"random"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/jokes/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"jokes",
										"random"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/jokes/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"jokes",
										"random"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get Random Food Trivia",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/food/trivia/random",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"food",
								"trivia",
								"random"
							]
						},
						"description": "Returns random food trivia."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/trivia/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"trivia",
										"random"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/trivia/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"trivia",
										"random"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/trivia/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"trivia",
										"random"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/food/trivia/random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"food",
										"trivia",
										"random"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "mealplanner",
			"item": [
				{
					"name": "{username}",
					"item": [
						{
							"name": "items",
							"item": [
								{
									"name": "Add to Meal Plan",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"hash\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/items?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"items"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												}
											]
										},
										"description": "Add an item to the user's meal plan."
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete from Meal Plan",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"id\": \"<number>\",\n    \"hash\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/items/:id?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"items",
												":id"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												},
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The shopping list item id."
												}
											]
										},
										"description": "Delete an item from the user's meal plan."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/items/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"items",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "templates",
							"item": [
								{
									"name": "Get Meal Plan Templates",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/templates?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"templates"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												}
											]
										},
										"description": "Get meal plan templates from user or public ones."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Meal Plan Template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/templates/:id?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"templates",
												":id"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												},
												{
													"key": "id",
													"value": "<number>",
													"description": "(Required) The shopping list item id."
												}
											]
										},
										"description": "Get information about a meal plan template."
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/templates/:id?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"templates",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "shopping-list",
							"item": [
								{
									"name": "items",
									"item": [
										{
											"name": "Add to Shopping List",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"hash\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items?hash=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														"items"
													],
													"query": [
														{
															"key": "hash",
															"value": "<string>",
															"description": "(Required) The private hash for the username."
														}
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) The username."
														}
													]
												},
												"description": "Add an item to the current shopping list of a user."
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete from Shopping List",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": ""
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"id\": \"<number>\",\n    \"hash\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items/:id?hash=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														"items",
														":id"
													],
													"query": [
														{
															"key": "hash",
															"value": "<string>",
															"description": "(Required) The private hash for the username."
														}
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) The username."
														},
														{
															"key": "id",
															"value": "<number>",
															"description": "(Required) The shopping list item id."
														}
													]
												},
												"description": "Delete an item from the current shopping list of the user."
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items/:id?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items",
																":id"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items/:id?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items",
																":id"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items/:id?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items",
																":id"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"username\": \"dsky\",\n    \"id\": 15678,\n    \"hash\": \"4b5v4398573406\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/items/:id?hash=4b5v4398573406",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mealplanner",
																":username",
																"shopping-list",
																"items",
																":id"
															],
															"query": [
																{
																	"key": "hash",
																	"value": "4b5v4398573406"
																}
															],
															"variable": [
																{
																	"key": "username"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Shopping List",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/shopping-list?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"shopping-list"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												}
											]
										},
										"description": "Get the current shopping list for the given user."
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Generate Shopping List",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"start-date\": \"<string>\",\n    \"end-date\": \"<string>\",\n    \"hash\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/:start-date/:end-date?hash=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"shopping-list",
												":start-date",
												":end-date"
											],
											"query": [
												{
													"key": "hash",
													"value": "<string>",
													"description": "(Required) The private hash for the username."
												}
											],
											"variable": [
												{
													"key": "username",
													"value": "<string>",
													"description": "(Required) The username."
												},
												{
													"key": "start-date",
													"value": "<string>",
													"description": "(Required) The start date in the format yyyy-mm-dd."
												},
												{
													"key": "end-date",
													"value": "<string>",
													"description": "(Required) The end date in the format yyyy-mm-dd."
												}
											]
										},
										"description": "Generate the shopping list for a user from the meal planner in a given time frame."
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"start-date\": \"2020-06-01\",\n    \"end-date\": \"2020-06-07\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/:start-date/:end-date?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														":start-date",
														":end-date"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "start-date"
														},
														{
															"key": "end-date"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"start-date\": \"2020-06-01\",\n    \"end-date\": \"2020-06-07\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/:start-date/:end-date?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														":start-date",
														":end-date"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "start-date"
														},
														{
															"key": "end-date"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"start-date\": \"2020-06-01\",\n    \"end-date\": \"2020-06-07\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/:start-date/:end-date?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														":start-date",
														":end-date"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "start-date"
														},
														{
															"key": "end-date"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"dsky\",\n    \"start-date\": \"2020-06-01\",\n    \"end-date\": \"2020-06-07\",\n    \"hash\": \"4b5v4398573406\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/mealplanner/:username/shopping-list/:start-date/:end-date?hash=4b5v4398573406",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mealplanner",
														":username",
														"shopping-list",
														":start-date",
														":end-date"
													],
													"query": [
														{
															"key": "hash",
															"value": "4b5v4398573406"
														}
													],
													"variable": [
														{
															"key": "username"
														},
														{
															"key": "start-date"
														},
														{
															"key": "end-date"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Meal Plan Week",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mealplanner/:username/week/:start-date?hash=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										":username",
										"week",
										":start-date"
									],
									"query": [
										{
											"key": "hash",
											"value": "<string>",
											"description": "(Required) The private hash for the username."
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) The username."
										},
										{
											"key": "start-date",
											"value": "<string>",
											"description": "(Required) The start date of the meal planned week in the format yyyy-mm-dd."
										}
									]
								},
								"description": "Retrieve a meal planned week for the given user. The username must be a spoonacular user and the hash must the the user's hash that can be found in his/her account."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/week/:start-date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"week",
												":start-date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "start-date"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/week/:start-date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"week",
												":start-date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "start-date"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/week/:start-date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"week",
												":start-date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "start-date"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/week/:start-date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"week",
												":start-date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "start-date"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Clear Meal Plan Day",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"date\": \"<string>\",\n    \"hash\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/mealplanner/:username/day/:date?hash=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										":username",
										"day",
										":date"
									],
									"query": [
										{
											"key": "hash",
											"value": "<string>",
											"description": "(Required) The private hash for the username."
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) The username."
										},
										{
											"key": "date",
											"value": "<string>",
											"description": "(Required) The date in the format yyyy-mm-dd."
										}
									]
								},
								"description": "Delete all planned items from the user's meal plan for a specific day."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"dsky\",\n    \"date\": \"2020-06-01\",\n    \"hash\": \"4b5v4398573406\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/day/:date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"day",
												":date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "date"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"dsky\",\n    \"date\": \"2020-06-01\",\n    \"hash\": \"4b5v4398573406\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/day/:date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"day",
												":date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "date"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"dsky\",\n    \"date\": \"2020-06-01\",\n    \"hash\": \"4b5v4398573406\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/day/:date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"day",
												":date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "date"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"dsky\",\n    \"date\": \"2020-06-01\",\n    \"hash\": \"4b5v4398573406\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/mealplanner/:username/day/:date?hash=4b5v4398573406",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mealplanner",
												":username",
												"day",
												":date"
											],
											"query": [
												{
													"key": "hash",
													"value": "4b5v4398573406"
												}
											],
											"variable": [
												{
													"key": "username"
												},
												{
													"key": "date"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Generate Meal Plan",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mealplanner/generate?timeFrame=<string>&targetCalories=<number>&diet=<string>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mealplanner",
								"generate"
							],
							"query": [
								{
									"key": "timeFrame",
									"value": "<string>",
									"description": "Either for one \"day\" or an entire \"week\"."
								},
								{
									"key": "targetCalories",
									"value": "<number>",
									"description": "What is the caloric target for one day? The meal plan generator will try to get as close as possible to that goal."
								},
								{
									"key": "diet",
									"value": "<string>",
									"description": "Enter a diet that the meal plan has to adhere to. See a full list of supported diets."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated list of allergens or ingredients that must be excluded."
								}
							]
						},
						"description": "Generate a meal plan with three meals per day (breakfast, lunch, and dinner)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mealplanner/generate?timeFrame=day&targetCalories=2000&diet=vegetarian&exclude=shellfish, olives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										"generate"
									],
									"query": [
										{
											"key": "timeFrame",
											"value": "day"
										},
										{
											"key": "targetCalories",
											"value": "2000"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "exclude",
											"value": "shellfish, olives"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mealplanner/generate?timeFrame=day&targetCalories=2000&diet=vegetarian&exclude=shellfish, olives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										"generate"
									],
									"query": [
										{
											"key": "timeFrame",
											"value": "day"
										},
										{
											"key": "targetCalories",
											"value": "2000"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "exclude",
											"value": "shellfish, olives"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mealplanner/generate?timeFrame=day&targetCalories=2000&diet=vegetarian&exclude=shellfish, olives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										"generate"
									],
									"query": [
										{
											"key": "timeFrame",
											"value": "day"
										},
										{
											"key": "targetCalories",
											"value": "2000"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "exclude",
											"value": "shellfish, olives"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mealplanner/generate?timeFrame=day&targetCalories=2000&diet=vegetarian&exclude=shellfish, olives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mealplanner",
										"generate"
									],
									"query": [
										{
											"key": "timeFrame",
											"value": "day"
										},
										{
											"key": "targetCalories",
											"value": "2000"
										},
										{
											"key": "diet",
											"value": "vegetarian"
										},
										{
											"key": "exclude",
											"value": "shellfish, olives"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Connect User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/connect",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"connect"
					]
				},
				"description": "In order to call user-specific endpoints, you need to connect your app's users to spoonacular users."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/connect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"connect"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/connect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"connect"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/connect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"connect"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/connect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"connect"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "68bf00c5-ba63-455f-9e58-335315581e38",
			"key": "baseUrl",
			"value": "https://api.spoonacular.com",
			"type": "string"
		}
	]
}