{
	"info": {
		"_postman_id": "a337c526-8727-4996-a8ab-eb29c8b54f2c",
		"name": "Fit4U API Documentation",
		"description": "Fit4U is a service used to help users control their weight by counting calories consumed and burned, controlling water balance, and encouraging healthy eating habits. They can also help to know your fat percent and keep body fat weight and percentage in control.\n\nSetting personal goals is the the main focus of such apps. If a person has hard time sticking to healthy nutrition, our service will help to create grocery shopping lists, and even collect healthy food recipes!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let register_test = pm.variables.get('register_test');\r",
									"// 3 scenario \r",
									"if (!register_test || register_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    let fullnames = [pm.variables.replaceIn(\"{{$randomFullName}}\"), pm.variables.replaceIn(\"{{$randomFullName}}\")];\r",
									"    let usernames = [pm.variables.replaceIn(\"{{$randomUserName}}\"), pm.variables.replaceIn(\"{{$randomUserName}}\")];\r",
									"    let emails = [pm.variables.replaceIn(\"{{$randomEmail}}\"), pm.variables.replaceIn(\"{{$randomEmail}}\")];\r",
									"    let passwords = [pm.variables.replaceIn(\"{{$randomPassword}}\")+1, pm.variables.replaceIn(\"{{$randomPassword}}\")+1];\r",
									"    let ages = [Math.floor(Math.random() * 30 + 20), Math.floor(Math.random() * 30 + 20)]\r",
									"    let roles = [0,1]\r",
									"    register_test = [\r",
									"        {\r",
									"            \"name\": fullnames[0],\r",
									"            \"username\": usernames[0],\r",
									"            \"email\": emails[0],\r",
									"            \"password\": passwords[0],\r",
									"            \"confirm_password\": passwords[0],\r",
									"            \"age\": ages[0],\r",
									"            \"role\": roles[0],\r",
									"            \"return_code\": 201,\r",
									"            \"return_body\": [\"name\",\"email\",\"username\",\"token\",\"age\",\"role\",\"balance\"]\r",
									"        },\r",
									"        {\r",
									"            \"name\": fullnames[1],\r",
									"            \"username\": usernames[1],\r",
									"            \"email\": emails[1],\r",
									"            \"password\": passwords[1],\r",
									"            \"confirm_password\": passwords[1],\r",
									"            \"age\": ages[1],\r",
									"            \"role\": roles[1],\r",
									"            \"return_code\": 201,\r",
									"            \"return_body\": [\"name\",\"email\",\"username\",\"token\",\"age\",\"role\",\"balance\"]\r",
									"        },\r",
									"        {\r",
									"            \"name\": '',\r",
									"            \"username\": usernames[0],\r",
									"            \"email\": emails[0],\r",
									"            \"password\": passwords[0],\r",
									"            \"confirm_password\": \"\",\r",
									"            \"age\": ages[0],\r",
									"            \"role\": roles[1],\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": ['errors']\r",
									"        },\r",
									"        \r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = register_test.shift();\r",
									"\r",
									"pm.environment.set(\"name\",currentData[\"name\"]);\r",
									"pm.environment.set(\"username\",currentData[\"username\"]);\r",
									"pm.environment.set(\"email\",currentData[\"email\"]);\r",
									"pm.environment.set(\"password\",currentData[\"password\"]);\r",
									"pm.environment.set(\"confirm_password\",currentData[\"confirm_password\"]);\r",
									"pm.environment.set(\"age\",currentData[\"age\"]);\r",
									"pm.environment.set(\"role\",currentData[\"role\"]);\r",
									"\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"\r",
									"pm.environment.set('register_test',register_test)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let jsonData = pm.response.json();\r",
									"\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "confirm_password",
									"value": "{{confirm_password}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "role",
									"value": "{{role}}",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/james/Downloads/person.jpg"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/register",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "The user registration API can be used to create user accounts in the application. A registration request must provide a user object such as name, username, password, email, age and role"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "",
											"description": "user's name",
											"type": "text"
										},
										{
											"key": "username",
											"value": "budi2",
											"description": "user's username",
											"type": "text"
										},
										{
											"key": "email",
											"value": "budi@budi",
											"description": "user's email",
											"type": "text"
										},
										{
											"key": "password",
											"value": "budi",
											"description": "user's password",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "budi2",
											"description": "password confirmation must match password field",
											"type": "text"
										},
										{
											"key": "age",
											"value": "20",
											"description": "number from above 18 (?)",
											"type": "text"
										},
										{
											"key": "role",
											"value": "2",
											"description": "0 = admin & 1 = user",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "209"
								},
								{
									"key": "ETag",
									"value": "W/\"d1-UubSn16GvC+KQrcqPjGWTgWGOBk\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:43:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"name is empty\",\n        \"wrong email format\",\n        \"username is not available\",\n        \"password must be at least 5 chars long\",\n        \"password must contain a number\",\n        \"Password confirmation doesn't match\",\n        \"role is not valid\"\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "{{name}}",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "email",
											"value": "{{email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "{{confirm_password}}",
											"type": "text"
										},
										{
											"key": "age",
											"value": "{{age}}",
											"type": "text"
										},
										{
											"key": "role",
											"value": "{{role}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/C:/Users/james/Downloads/person.jpg"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "378"
								},
								{
									"key": "ETag",
									"value": "W/\"17a-luCh3YfOrVYgK39jkPzOEfIP4Jc\""
								},
								{
									"key": "Date",
									"value": "Fri, 28 May 2021 15:45:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Clark McKenzie\",\n    \"email\": \"Tanner66@yahoo.com\",\n    \"username\": \"Joan_Wiza\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInVzZXJuYW1lIjoiSm9hbl9XaXphIiwicm9sZSI6IjAiLCJpYXQiOjE2MjIyMTY3MzB9.i8OgVzQnvLTpEv5wUsIf1XbaysZgmK3xlFoio6l0Ua8\",\n    \"age\": 21,\n    \"image\": \"https://drive.google.com/file/d/15isdVPGypNl8w1ucvjwTwvNVyV83CxSu/view?usp=sharing\",\n    \"role\": \"admin\",\n    \"balance\": 0\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    if (jsonData.role == 0) pm.environment.set('token_admin',jsonData.token);\r",
									"    \r",
									"    if (jsonData.role == 1 && jsonData.apihit > 50) pm.environment.set('token_user',jsonData.token);\r",
									"\r",
									"    if (jsonData.role == 1 && jsonData.apihit < 10) pm.environment.set('token_user_no_apihit',jsonData.token);\r",
									"\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let login_test = pm.variables.get('login_test');\r",
									"// 3 scenario \r",
									"if (!login_test || login_test.length <= 0) {\r",
									"    login_test = [\r",
									"        {\r",
									"            'username':'admin1',\r",
									"            'password':'admin1',\r",
									"            'return_code':200,\r",
									"            'return_body': [ \"message\", 'token', 'role', 'apihit' ]\r",
									"        },\r",
									"        {\r",
									"            'username':'user1',\r",
									"            'password':'user1',\r",
									"            'return_code':200,\r",
									"            'return_body': [ \"message\", 'token', 'role', 'apihit' ]\r",
									"        },\r",
									"        {\r",
									"            \"username\": 'user2',\r",
									"            \"password\": 'user2',\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": ['message', 'token', 'role', 'apihit']\r",
									"        },\r",
									"        {\r",
									"            'username':'',\r",
									"            'password':'',\r",
									"            'return_code':400,\r",
									"            'return_body': [ \"errors\" ]\r",
									"        },\r",
									"        {\r",
									"            'username':'not_found_user',\r",
									"            'password':'not_found_user',\r",
									"            'return_code':401,\r",
									"            'return_body': [ \"message\" ]\r",
									"        },\r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = login_test.shift();\r",
									"\r",
									"pm.environment.set('username',currentData['username'])\r",
									"pm.environment.set('password',currentData['password'])\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"\r",
									"pm.environment.set('login_test',login_test)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "user's username",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"description": "user's password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/login",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Login to get token which takes user's username and password"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "",
											"description": "user's username",
											"type": "text"
										},
										{
											"key": "password",
											"value": "",
											"description": "user's password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "ETag",
									"value": "W/\"44-TRGSW4sG60SlqGkTTE8rdwVe6DE\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 07:57:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"username can not be empty\",\n        \"password can not be empty\"\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin1",
											"description": "user's username",
											"type": "text"
										},
										{
											"key": "password",
											"value": "admin1",
											"description": "user's password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "249"
								},
								{
									"key": "ETag",
									"value": "W/\"f9-cM5EhG3psAKDORZNT492Rcz9TC4\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:41:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Welcome, admin1\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU\"\n}"
						}
					]
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    pm.response.to.have.status(statusCode);\r",
									"\r",
									"    if (statusCode == 200) jsonData.forEach(obj => pm.expect(obj).to.have.keys(returnData));\r",
									"    else pm.expect(jsonData).to.have.keys(returnData);    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let get_all_users_test = pm.variables.get('get_all_users_test');\r",
									"// 3 scenario \r",
									"if (!get_all_users_test || get_all_users_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    get_all_users_test = [\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"name\", \"username\", \"email\", \"role\"]\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 403,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": '',\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        \r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = get_all_users_test.shift();\r",
									"\r",
									"pm.environment.set(\"x-auth-token\",currentData[\"x-auth-token\"]);\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"\r",
									"pm.environment.set('get_all_users_test',get_all_users_test)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"description": "token",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "This API is used to get all users registered to this application"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:32:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "491"
								},
								{
									"key": "ETag",
									"value": "W/\"1eb-fuLxAo7PZjgUjgyhHDzt+vkM67w\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:42:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"admin1\",\n        \"username\": \"admin1\",\n        \"email\": \"admin1@admin.com\",\n        \"role\": 0\n    },\n    {\n        \"name\": \"james\",\n        \"username\": \"james7\",\n        \"email\": \"james@james.com\",\n        \"role\": 1\n    },\n    {\n        \"name\": \"budi\",\n        \"username\": \"budi1\",\n        \"email\": \"budi@budi.com\",\n        \"role\": 1\n    },\n    {\n        \"name\": \"budi\",\n        \"username\": \"budi2\",\n        \"email\": \"budi2@budi.com\",\n        \"role\": 1\n    },\n    {\n        \"name\": \"budi\",\n        \"username\": \"budi3\",\n        \"email\": \"budi3@budi.com\",\n        \"role\": 1\n    },\n    {\n        \"name\": \"budi\",\n        \"username\": \"budi4\",\n        \"email\": \"budi4@budi.com\",\n        \"role\": 1\n    },\n    {\n        \"name\": \"budi\",\n        \"username\": \"budi5\",\n        \"email\": \"budi5@budi.com\",\n        \"role\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Get detail user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let get_detail_user_test = pm.variables.get('get_detail_user_test');\r",
									"// 3 scenario \r",
									"if (!get_detail_user_test || get_detail_user_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    get_detail_user_test = [\r",
									"        {\r",
									"            \"id\": 1,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"id\",\"name\", \"email\", \"username\", \"password\", \"token\", \"image\", \"age\", \"role\",\"balance\", \"is_active\",\"api_hit\", \"last_hit\" ]\r",
									"        },\r",
									"        {\r",
									"            \"id\": 132451,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 404,\r",
									"            \"return_body\": [\"message\"]\r",
									"        },\r",
									"        {\r",
									"            'id': 1,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 403,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            'id': 1,\r",
									"            \"x-auth-token\": '',\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        \r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = get_detail_user_test.shift();\r",
									"\r",
									"pm.environment.set(\"id\",currentData[\"id\"]);\r",
									"pm.environment.set(\"x-auth-token\",currentData[\"x-auth-token\"]);\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"\r",
									"pm.environment.set('get_detail_user_test',get_detail_user_test)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/:id",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "383"
								},
								{
									"key": "ETag",
									"value": "W/\"17f-Okl67RNfPzjbrmb3vNhhT4ORJdU\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 12:07:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"admin1\",\n    \"email\": \"admin1@admin.com\",\n    \"username\": \"admin1\",\n    \"password\": \"admin1\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU\",\n    \"image\": null,\n    \"age\": 21,\n    \"role\": 0,\n    \"balance\": 0,\n    \"is_active\": 1,\n    \"api_hit\": 9999\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwidXNlcm5hbWUiOiJidWRpc3Nzc3NzIiwicm9sZSI6IjEiLCJpYXQiOjE2MTk3ODMxNDZ9.YVR6lSgrd-1qU886Gk2rM0sPRKw-TlK4mEgOUBFxiKo",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"1"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "ETag",
									"value": "W/\"49-oJ+n7GgeLFUEOxFeC/DmAA2IJUg\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 12:08:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "Access Denied: You don't have correct privilege to perform this operation"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/users/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-SVmamrQoLdVa9Ydh/KVxXjgQ8mA\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:55:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"no user found!\"\n}"
						}
					]
				},
				{
					"name": "Add user balance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let add_balance = pm.variables.get(\"add_balance_test\");\r",
									"if(!add_balance || add_balance.length <= 0) {\r",
									"    let balance = pm.variables.replaceIn(\"{{$randomInt}}\") * 1000\r",
									"    add_balance = [\r",
									"        {\r",
									"            \"balance\": balance,\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"]\r",
									"        },\r",
									"        {\r",
									"            \"balance\": balance,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"balance\"]\r",
									"        },\r",
									"        {\r",
									"            \"balance\": '',\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": [\"errors\"]\r",
									"        },\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = add_balance.shift();\r",
									"\r",
									"pm.environment.set(\"balance\",currentData[\"balance\"]);\r",
									"\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body',currentData['return_body']);\r",
									"\r",
									"pm.environment.set('add_balance_test', add_balance);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "balance",
									"value": "{{balance}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/balance",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"balance"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwidXNlcm5hbWUiOiJidWRpc3Nzc3NzIiwicm9sZSI6IjEiLCJpYXQiOjE2MTk3ODMxNDZ9.YVR6lSgrd-1qU886Gk2rM0sPRKw-TlK4mEgOUBFxiKo",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "balance",
											"value": "50000",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/balance",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"balance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "19"
								},
								{
									"key": "ETag",
									"value": "W/\"13-taMYZJg04qEU2fDqsa+Q8JPHW58\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 14:07:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"balance\": \"50000\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "balance",
											"value": "50000",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/balance",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"balance"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 14:07:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						}
					]
				},
				{
					"name": "Update profile user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let update_profile = pm.variables.get(\"update_profile_test\");\r",
									"if(!update_profile || update_profile.length <= 0) {\r",
									"    let names = pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
									"    let password = pm.variables.replaceIn(\"{{$randomPassword}}\")\r",
									"    let ages = pm.variables.replaceIn(\"{{$randomInt}}\") % 50\r",
									"    update_profile = [\r",
									"        {\r",
									"            \"name\": names,\r",
									"            \"password\": password,\r",
									"            \"age\": ages,\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"]\r",
									"        },\r",
									"        {\r",
									"            \"name\": names,\r",
									"            \"password\": password,\r",
									"            \"age\": ages,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"name\",\"image\",\"password\",\"age\"]\r",
									"        },\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = update_profile.shift();\r",
									"\r",
									"\r",
									"pm.environment.set(\"name\",currentData[\"name\"]);\r",
									"pm.environment.set(\"password\",currentData[\"password\"]);\r",
									"pm.environment.set(\"age\",currentData[\"age\"]);\r",
									"\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body',currentData['return_body']);\r",
									"\r",
									"pm.environment.set('update_profile_test', update_profile);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/profile",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "User can update their data such as name, user, and age"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwidXNlcm5hbWUiOiJidWRpc3Nzc3NzIiwicm9sZSI6IjEiLCJpYXQiOjE2MTk3ODMxNDZ9.YVR6lSgrd-1qU886Gk2rM0sPRKw-TlK4mEgOUBFxiKo",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Kevin Setiabudi",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Passw0rd",
											"type": "text"
										},
										{
											"key": "age",
											"value": "18",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/profile",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "ETag",
									"value": "W/\"48-MuYafaJV0GTs1fcdQZABLrNOeUk\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 14:00:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Kevin Setiabudi\",\n    \"image\": null,\n    \"password\": \"Passw0rd\",\n    \"age\": \"18\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Kevin Setiabudi",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Passw0rd",
											"type": "text"
										},
										{
											"key": "age",
											"value": "18",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/profile",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 14:01:05 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						}
					]
				},
				{
					"name": "Reset API hit",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/users/plans",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"plans"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plans",
			"item": [
				{
					"name": "Get all plans",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let myVar = pm.variables.get(\"get_all_plan_test\");\r",
									"if(!myVar || myVar.length <= 0) {\r",
									"    myVar = [\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"id\",\"name\",\"price\",\"duration\",\"api_hit\",\"duration_unit\"]\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"]\r",
									"        }\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = myVar.shift();\r",
									"\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body',currentData['return_body']);\r",
									"\r",
									"pm.environment.set('get_all_plan_test', myVar);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('Status code is correct!', function() {\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"\r",
									"    pm.response.to.have.status(statusCode)\r",
									"    \r",
									"    if (statusCode == 200) jsonData.forEach(obj => pm.expect(obj).to.have.keys(pm.environment.get('return_body')) );\r",
									"    else pm.expect(jsonData).to.have.keys(pm.environment.get('return_body'));\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/plans",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"plans"
							]
						},
						"description": "You can get all plans with the details that available"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "localhost:3000/api/plans",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 09:47:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/plans",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "ETag",
									"value": "W/\"176-yYE/TK5VPexkgP6YvKl8QwK/oSA\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:28:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"SILVER\",\n        \"price\": 100000,\n        \"duration\": 30,\n        \"api_hit\": 100,\n        \"duration_unit\": \"days\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"GOLD\",\n        \"price\": 150000,\n        \"duration\": 60,\n        \"api_hit\": 200,\n        \"duration_unit\": \"days\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"DIAMOND\",\n        \"price\": 200000,\n        \"duration\": 90,\n        \"api_hit\": 300,\n        \"duration_unit\": \"days\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"SUPER PREMIUM\",\n        \"price\": 5000000,\n        \"duration\": 500,\n        \"api_hit\": null,\n        \"duration_unit\": \"days\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create plan",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let myVar = pm.variables.get(\"create_plan_test\");\r",
									"if(!myVar || myVar.length <= 0) {\r",
									"    myVar = [\r",
									"        {\r",
									"            \"name\": \"SUPER PREMIUM\",\r",
									"            \"price\": 5000000,\r",
									"            \"duration\": 500,\r",
									"            \"api_hit\": 500,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 201,\r",
									"            \"return_body\": [\"id\",\"name\",\"price\",\"duration\", \"api_hit\"],\r",
									"        },\r",
									"        {\r",
									"            \"name\": \"SUPER PREMIUM\",\r",
									"            \"price\": \"\",\r",
									"            \"duration\": 500,\r",
									"            \"api_hit\": 500,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": [\"errors\"],\r",
									"        },\r",
									"        {\r",
									"            \"name\": \"SUPER PREMIUM\",\r",
									"            \"price\": 5000000,\r",
									"            \"duration\": 500,\r",
									"            \"api_hit\": 500,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 403,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"name\": \"SUPER PREMIUM\",\r",
									"            \"price\": 5000000,\r",
									"            \"duration\": 500,\r",
									"            \"api_hit\": 500,\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"],\r",
									"        }\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = myVar.shift();\r",
									"\r",
									"pm.environment.set('name', currentData['name']);\r",
									"pm.environment.set('price', currentData['price']);\r",
									"pm.environment.set('duration', currentData['duration']);\r",
									"pm.environment.set('api_hit', currentData['api_hit']);\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body', currentData['return_body']);\r",
									"\r",
									"pm.environment.set('create_plan_test', myVar);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('Status code is correct!', function() {\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"\r",
									"    if(statusCode == 201) {\r",
									"        const { id } = pm.response.json();\r",
									"        pm.environment.set('plan_id',id);\r",
									"    }\r",
									"    pm.response.to.have.status(statusCode)\r",
									"\r",
									"    pm.expect(jsonData).to.have.keys(pm.environment.get('return_body'));\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{name}}",
									"description": "plan's name",
									"type": "text"
								},
								{
									"key": "price",
									"value": "{{price}}",
									"description": "plan's price",
									"type": "text"
								},
								{
									"key": "duration",
									"value": "{{duration}}",
									"description": "plans' duration",
									"type": "text"
								},
								{
									"key": "api_hit",
									"value": "{{api_hit}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/plans",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"plans"
							]
						},
						"description": "Create new plan with parameters name, price, duration"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "DIAMOND",
											"type": "text"
										},
										{
											"key": "price",
											"value": "5000000",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "200",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/api/plans",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 09:49:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "PREMIUM",
											"type": "text"
										},
										{
											"key": "price",
											"value": "5000000",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "200",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/api/plans",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "60"
								},
								{
									"key": "ETag",
									"value": "W/\"3c-usz5GeiKFvUMw7OOZ1dGdtgSDCk\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 09:56:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"PREMIUM\",\n    \"price\": \"5000000\",\n    \"duration\": \"200\"\n}"
						},
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "{{name}}",
											"description": "plan's name",
											"type": "text"
										},
										{
											"key": "price",
											"value": "{{price}}",
											"description": "plan's price",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "{{duration}}",
											"description": "plans' duration",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/plans",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "29"
								},
								{
									"key": "ETag",
									"value": "W/\"1d-vAfsBFsvTQBefToP9yZ1q/AR84s\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:09:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"price is empty\"\n    ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "{{name}}",
											"description": "plan's name",
											"type": "text"
										},
										{
											"key": "price",
											"value": "{{price}}",
											"description": "plan's price",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "{{duration}}",
											"description": "plans' duration",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/plans",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"plans"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "ETag",
									"value": "W/\"57-ULwc8XFW8uHNSkkBoF7h6dDX/M8\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:47:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: You don't have correct privilege to perform this operation\"\n}"
						}
					]
				},
				{
					"name": "Delete plan",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let myVar = pm.variables.get(\"delete_plan_test\");\r",
									"\r",
									"if(!myVar || myVar.length <= 0) {\r",
									"    myVar = [\r",
									"        {\r",
									"            \"id\": pm.environment.get('plan_id'),\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 403,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"id\": pm.environment.get('plan_id'),\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"id\": 0,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"id\": pm.environment.get('plan_id'),\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = myVar.shift();\r",
									"\r",
									"pm.environment.set('id', currentData['id']);\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body', currentData['return_body']);\r",
									"\r",
									"pm.environment.set('delete_plan_test', myVar);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('Status code is correct!', function() {\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    // if(statusCode == 200) {\r",
									"    //     pm.sendRequest({\r",
									"    //         url: \"localhost:3000/api/plans\",\r",
									"    //         method: \"POST\",\r",
									"    //         body: {\r",
									"    //             mode: \"urlencoded\",\r",
									"    //             urlencoded: [\r",
									"    //                 {key: 'name', value: 'test1', disabled: false},\r",
									"    //                 {key: 'price', value: '1000', disabled: false},\r",
									"    //                 {key: 'duration', value: '30', disabled: false},\r",
									"    //                 {key: 'api_hit', value: '100', disabled: false},\r",
									"    //             ]\r",
									"    //         }\r",
									"    //     }, function(err, response) {\r",
									"    //         console.log(response);\r",
									"    //         pm.environment.set(\"delete_matkul_jwt\", response.insertId);\r",
									"    //     });\r",
									"    // }\r",
									"\r",
									"    pm.response.to.have.status(statusCode)\r",
									"\r",
									"    // if (statusCode == 201 || statusCode == 401) pm.expect(jsonData).to.have.keys(pm.environment.get('return_body'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/plans/:id",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"plans",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:3000/api/plans/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans",
										"6"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 09:59:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJidWRpNSIsInJvbGUiOiIxIiwiaWF0IjoxNjE5Nzc2NDg2fQ._YzE8NhN3U1_ytO3eItLSBcL1GxuZ9mCBsZ_CzY_WiA",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:3000/api/plans/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans",
										"6"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "ETag",
									"value": "W/\"49-oJ+n7GgeLFUEOxFeC/DmAA2IJUg\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 10:00:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "Access Denied: You don't have correct privilege to perform this operation"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluMUBhZG1pbi5jb20iLCJ1c2VybmFtZSI6ImFkbWluMSIsInBhc3N3b3JkIjoiYWRtaW4xIiwicm9sZSI6IjAiLCJpYXQiOjE2MTkyNDQ2MzF9.N8yr95LJ-OwNEjwKYJhL0Nhjx96RqVZFW2_cWGKvMsU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:3000/api/plans/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"plans",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-j+EqozlbHRrjXayrBEaHPKE6UqA\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 10:00:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Delete success\"\n}"
						}
					]
				}
			],
			"description": "Plan is like a package built for you to join so that you can use our API"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Get transactions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let myVar = pm.variables.get(\"get_transaction_test\");\r",
									"if(!myVar || myVar.length <= 0) {\r",
									"    myVar = [\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"user\",\"plan\",\"price\",\"duration\",\"start\",\"end\"],\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"plan\",\"price\",\"duration\",\"start\",\"end\"],\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"],\r",
									"        }\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = myVar.shift();\r",
									"\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body', currentData['return_body']);\r",
									"\r",
									"pm.environment.set('get_transaction_test', myVar);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('Status code is correct!', function() {\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"\r",
									"    pm.response.to.have.status(statusCode);\r",
									"\r",
									"    // console.log(jsonData);\r",
									"    // console.log(pm.environment.get('return_body'));\r",
									"\r",
									"    if (statusCode == 200) jsonData.forEach(obj => pm.expect(obj).to.have.keys(pm.environment.get('return_body')) );\r",
									"    else pm.expect(jsonData).to.have.keys(pm.environment.get('return_body'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/transactions",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"transactions"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "localhost:3000/api/transactions",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 10:10:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success Admin",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "localhost:3000/api/transactions",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "263"
								},
								{
									"key": "ETag",
									"value": "W/\"107-DGPjYY5v3NJlOprazFqCc5N+NwE\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:31:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user\": \"budi\",\n        \"plan\": \"SILVER\",\n        \"price\": 100000,\n        \"duration\": \"30 Days\",\n        \"start\": \"4/30/2021, 5:06:06 PM\",\n        \"end\": \"5/30/2021, 5:06:06 PM\"\n    },\n    {\n        \"user\": \"budi\",\n        \"plan\": \"SILVER\",\n        \"price\": 100000,\n        \"duration\": \"30 Days\",\n        \"start\": \"5/12/2021, 11:00:40 PM\",\n        \"end\": \"6/11/2021, 11:00:40 PM\"\n    }\n]"
						},
						{
							"name": "Success User",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "localhost:3000/api/transactions",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "233"
								},
								{
									"key": "ETag",
									"value": "W/\"e9-funO4PWoxAMIbPfwh1wcS/D6hKk\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:32:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"plan\": \"SILVER\",\n        \"price\": 100000,\n        \"duration\": \"30 Days\",\n        \"time\": \"4/30/2021, 5:06:06 PM\",\n        \"end\": \"5/30/2021, 5:06:06 PM\"\n    },\n    {\n        \"plan\": \"SILVER\",\n        \"price\": 100000,\n        \"duration\": \"30 Days\",\n        \"time\": \"5/12/2021, 11:00:40 PM\",\n        \"end\": \"6/11/2021, 11:00:40 PM\"\n    }\n]"
						}
					]
				},
				{
					"name": "Join transaction",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let myVar = pm.variables.get(\"join_transaction_test\");\r",
									"if(!myVar || myVar.length <= 0) {\r",
									"    myVar = [\r",
									"        {\r",
									"            \"plan_id\": 1,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 201,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"plan_id\": \"\",\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": [\"errors\"],\r",
									"        },\r",
									"        {\r",
									"            \"plan_id\": 1,\r",
									"            \"x-auth-token\": pm.environment.get('token_admin'),\r",
									"            \"return_code\": 403,\r",
									"            \"return_body\": [\"message\"],\r",
									"        },\r",
									"        {\r",
									"            \"plan_id\": 1,\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"],\r",
									"        }\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = myVar.shift();\r",
									"\r",
									"pm.environment.set('plan_id', currentData['plan_id']);\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body', currentData['return_body']);\r",
									"\r",
									"pm.environment.set('join_transaction_test', myVar);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('Status code is correct!', function() {\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"\r",
									"    pm.response.to.have.status(statusCode);\r",
									"\r",
									"    pm.expect(jsonData).to.have.keys(pm.environment.get('return_body'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "plan_id",
									"value": "{{plan_id}}",
									"description": "plan's id",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/transactions",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"transactions"
							]
						}
					},
					"response": [
						{
							"name": "Balance is not enough",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJidWRpNSIsInJvbGUiOiIxIiwiaWF0IjoxNjE5Nzc2NDg2fQ._YzE8NhN3U1_ytO3eItLSBcL1GxuZ9mCBsZ_CzY_WiA",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "plan_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/api/transactions",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "ETag",
									"value": "W/\"28-9W2/mEkNvbnV5HqjRpxdH5yu1KQ\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 10:04:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"YOUR BALANCE IS NOT ENOUGH\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJidWRpNSIsInJvbGUiOiIxIiwiaWF0IjoxNjE5Nzc2NDg2fQ._YzE8NhN3U1_ytO3eItLSBcL1GxuZ9mCBsZ_CzY_WiA",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "plan_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/api/transactions",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "38"
								},
								{
									"key": "ETag",
									"value": "W/\"26-3KWHLW+gWiShzHOSLHrAVUh70Js\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 10:06:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS JOIN SILVER PLAN\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "plan_id",
											"value": "{{plan_id}}",
											"description": "plan's id",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/transactions",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"transactions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "ETag",
									"value": "W/\"57-ULwc8XFW8uHNSkkBoF7h6dDX/M8\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 09:41:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: You don't have correct privilege to perform this operation\"\n}"
						}
					]
				}
			],
			"description": "You can make a transaction with our plans that suits you the best to increase your request capacity"
		},
		{
			"name": "Recipes",
			"item": [
				{
					"name": "Search recipes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let search_reciptes_test = pm.variables.get('search_reciptes_test');\r",
									"// 3 scenario \r",
									"if (!search_reciptes_test || search_reciptes_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    search_reciptes_test = [\r",
									"        {\r",
									"            \"search\": \"pasta\",\r",
									"            \"number\": 5,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": ['id','title','image']\r",
									"        },\r",
									"        {\r",
									"            \"search\": \"\",\r",
									"            \"number\": 5,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": ['id','title','image']\r",
									"        },\r",
									"        {\r",
									"            \"search\": \"qwerqsdvasdvqerqwer12rqwfdzxv\",\r",
									"            \"number\": 5,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 404,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"search\": \"a\",\r",
									"            \"number\": 5,\r",
									"            \"x-auth-token\": pm.environment.get('token_user_no_apihit'),\r",
									"            \"return_code\": 429,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"search\": \"asdfadfqwer\",\r",
									"            \"number\": 5,\r",
									"            \"x-auth-token\": '',\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = search_reciptes_test.shift();\r",
									"\r",
									"pm.environment.set(\"x-auth-token\",currentData[\"x-auth-token\"]);\r",
									"pm.environment.set(\"search\",currentData[\"search\"]);\r",
									"pm.environment.set(\"number\",currentData[\"number\"]);\r",
									"\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"\r",
									"pm.environment.set('search_reciptes_test',search_reciptes_test)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    if (statusCode == 200) {\r",
									"        jsonData.forEach(obj => pm.expect(obj).to.have.keys(returnData))\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/recipes?search={{search}}&number={{number}}",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"recipes"
							],
							"query": [
								{
									"key": "search",
									"value": "{{search}}",
									"description": "search recipes"
								},
								{
									"key": "number",
									"value": "{{number}}",
									"description": "number of recipes returned"
								}
							]
						},
						"description": "Search recipes by names"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/recipes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:45:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/recipes?search={{search}}&number={{number}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search}}",
											"description": "search recipes"
										},
										{
											"key": "number",
											"value": "{{number}}",
											"description": "number of recipes returned"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "622"
								},
								{
									"key": "ETag",
									"value": "W/\"26e-J6nG4mwcS4LiyL/RFo0++P7rFoA\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 716426,\n        \"title\": \"Cauliflower, Brown Rice, and Vegetable Fried Rice\",\n        \"image\": \"https://spoonacular.com/recipeImages/716426-312x231.jpg\"\n    },\n    {\n        \"id\": 715594,\n        \"title\": \"Homemade Garlic and Basil French Fries\",\n        \"image\": \"https://spoonacular.com/recipeImages/715594-312x231.jpg\"\n    },\n    {\n        \"id\": 715497,\n        \"title\": \"Berry Banana Breakfast Smoothie\",\n        \"image\": \"https://spoonacular.com/recipeImages/715497-312x231.jpg\"\n    },\n    {\n        \"id\": 644387,\n        \"title\": \"Garlicky Kale\",\n        \"image\": \"https://spoonacular.com/recipeImages/644387-312x231.jpg\"\n    },\n    {\n        \"id\": 715392,\n        \"title\": \"Chicken Tortilla Soup (Slow Cooker)\",\n        \"image\": \"https://spoonacular.com/recipeImages/715392-312x231.jpg\"\n    }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/recipes?search={{search}}&number={{number}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search}}",
											"description": "search recipes"
										},
										{
											"key": "number",
											"value": "{{number}}",
											"description": "number of recipes returned"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "31"
								},
								{
									"key": "ETag",
									"value": "W/\"1f-/rmD64zMU5H/fNUebxYr9ItvL+I\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:48:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"no recipes found!\"\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/recipes?search={{search}}&number={{number}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search}}",
											"description": "search recipes"
										},
										{
											"key": "number",
											"value": "{{number}}",
											"description": "number of recipes returned"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "ETag",
									"value": "W/\"48-FEzUEdKVo+p1EIDuJMCx8bDVnWc\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:48:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: Not enough apihit to perform this operation\"\n}"
						}
					]
				},
				{
					"name": "Recipes by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let recipes_by_id_test = pm.variables.get('recipes_by_id_test');\r",
									"// 3 scenario \r",
									"if (!recipes_by_id_test || recipes_by_id_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    recipes_by_id_test = [\r",
									"        {\r",
									"            \"recipe_id\": \"716429\",\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"id\",\"title\",\"dishTypes\",\"readyInMinutes\",\"servings\",\"image\",\"summary\",\"nutrition\",\"extendedIngredients\",\"instructions\",\"analyzedInstructions\",\"dairyFree\",\"glutenFree\",\"sustainable\",\"vegan\",\"vegetarian\",\"veryHealthy\",\"veryPopular\",]\r",
									"        },\r",
									"        {\r",
									"            \"recipe_id\": \"716429\",\r",
									"            \"x-auth-token\": '',\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"recipe_id\": '1231231903',\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 404,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"recipe_id\": '716429',\r",
									"            \"x-auth-token\": pm.environment.get('token_user_no_apihit'),\r",
									"            \"return_code\": 429,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = recipes_by_id_test.shift();\r",
									"\r",
									"pm.environment.set(\"x-auth-token\",currentData[\"x-auth-token\"]);\r",
									"pm.environment.set(\"recipe_id\",currentData[\"recipe_id\"]);\r",
									"pm.environment.set('return_code',currentData['return_code']);\r",
									"pm.environment.set('return_body',currentData['return_body']);\r",
									"\r",
									"pm.environment.set('recipes_by_id_test',recipes_by_id_test)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/recipes/:recipe_id",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"recipes",
								":recipe_id"
							],
							"variable": [
								{
									"key": "recipe_id",
									"value": "{{recipe_id}}"
								}
							]
						},
						"description": "Use the recipe id to get full information about a recipe, such as the ingredients, nutrition, steps about how to make it and other information."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/recipes/123415",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"123415"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:54:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywidXNlcm5hbWUiOiJidWRpNSIsInJvbGUiOiIxIiwiaWF0IjoxNjE5NzAzNTM1fQ.nDfbOsQAaDhb3yPd7KXNWGu2mMXaCDgBa_r3A7JZicc",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/recipes/adsfasdfqewf",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"adsfasdfqewf"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Apr 2021 13:56:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/recipes/:recipe_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										":recipe_id"
									],
									"variable": [
										{
											"key": "recipe_id",
											"value": "{{recipe_id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40844"
								},
								{
									"key": "ETag",
									"value": "W/\"9f8c-HhrLj0mq2UGJRW7MEpuTdEKBZHA\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:03:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 716429,\n    \"title\": \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs\",\n    \"dishTypes\": [\n        \"lunch\",\n        \"main course\",\n        \"main dish\",\n        \"dinner\"\n    ],\n    \"readyInMinutes\": 45,\n    \"servings\": 2,\n    \"image\": \"https://spoonacular.com/recipeImages/716429-556x370.jpg\",\n    \"summary\": \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs might be just the main course you are searching for. This recipe makes 2 servings with <b>636 calories</b>, <b>21g of protein</b>, and <b>20g of fat</b> each. For <b>$1.83 per serving</b>, this recipe <b>covers 24%</b> of your daily requirements of vitamins and minerals. From preparation to the plate, this recipe takes about <b>45 minutes</b>. This recipe is liked by 209 foodies and cooks. If you have pasta, salt and pepper, cheese, and a few other ingredients on hand, you can make it. To use up the extra virgin olive oil you could follow this main course with the <a href=\\\"https://spoonacular.com/recipes/peach-crisp-healthy-crisp-for-breakfast-487698\\\">Peach Crisp: Healthy Crisp for Breakfast</a> as a dessert. All things considered, we decided this recipe <b>deserves a spoonacular score of 86%</b>. This score is tremendous. Try <a href=\\\"https://spoonacular.com/recipes/cauliflower-gratin-with-garlic-breadcrumbs-318375\\\">Cauliflower Gratin with Garlic Breadcrumbs</a>, <a href=\\\"https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\\\">Pasta With Cauliflower, Sausage, & Breadcrumbs</a>, and <a href=\\\"https://spoonacular.com/recipes/pasta-with-roasted-cauliflower-parsley-and-breadcrumbs-30738\\\">Pasta With Roasted Cauliflower, Parsley, And Breadcrumbs</a> for similar recipes.\",\n    \"nutrition\": {\n        \"nutrients\": [\n            {\n                \"name\": \"Calories\",\n                \"title\": \"Calories\",\n                \"amount\": 584.46,\n                \"unit\": \"kcal\",\n                \"percentOfDailyNeeds\": 29.22\n            },\n            {\n                \"name\": \"Fat\",\n                \"title\": \"Fat\",\n                \"amount\": 19.83,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 30.51\n            },\n            {\n                \"name\": \"Saturated Fat\",\n                \"title\": \"Saturated Fat\",\n                \"amount\": 8.09,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 50.57\n            },\n            {\n                \"name\": \"Carbohydrates\",\n                \"title\": \"Carbohydrates\",\n                \"amount\": 83.71,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 27.9\n            },\n            {\n                \"name\": \"Net Carbohydrates\",\n                \"title\": \"Net Carbohydrates\",\n                \"amount\": 76.98,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 27.99\n            },\n            {\n                \"name\": \"Sugar\",\n                \"title\": \"Sugar\",\n                \"amount\": 5.36,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 5.95\n            },\n            {\n                \"name\": \"Cholesterol\",\n                \"title\": \"Cholesterol\",\n                \"amount\": 31.02,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 10.34\n            },\n            {\n                \"name\": \"Sodium\",\n                \"title\": \"Sodium\",\n                \"amount\": 451.42,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 19.63\n            },\n            {\n                \"name\": \"Alcohol\",\n                \"title\": \"Alcohol\",\n                \"amount\": 1.55,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 8.58\n            },\n            {\n                \"name\": \"Protein\",\n                \"title\": \"Protein\",\n                \"amount\": 18.98,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 37.97\n            },\n            {\n                \"name\": \"Selenium\",\n                \"title\": \"Selenium\",\n                \"amount\": 57.72,\n                \"unit\": \"µg\",\n                \"percentOfDailyNeeds\": 82.45\n            },\n            {\n                \"name\": \"Vitamin C\",\n                \"title\": \"Vitamin C\",\n                \"amount\": 56.62,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 68.64\n            },\n            {\n                \"name\": \"Manganese\",\n                \"title\": \"Manganese\",\n                \"amount\": 1.11,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 55.52\n            },\n            {\n                \"name\": \"Vitamin K\",\n                \"title\": \"Vitamin K\",\n                \"amount\": 58.27,\n                \"unit\": \"µg\",\n                \"percentOfDailyNeeds\": 55.49\n            },\n            {\n                \"name\": \"Phosphorus\",\n                \"title\": \"Phosphorus\",\n                \"amount\": 304.38,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 30.44\n            },\n            {\n                \"name\": \"Fiber\",\n                \"title\": \"Fiber\",\n                \"amount\": 6.73,\n                \"unit\": \"g\",\n                \"percentOfDailyNeeds\": 26.92\n            },\n            {\n                \"name\": \"Folate\",\n                \"title\": \"Folate\",\n                \"amount\": 87.14,\n                \"unit\": \"µg\",\n                \"percentOfDailyNeeds\": 21.79\n            },\n            {\n                \"name\": \"Vitamin B6\",\n                \"title\": \"Vitamin B6\",\n                \"amount\": 0.43,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 21.46\n            },\n            {\n                \"name\": \"Magnesium\",\n                \"title\": \"Magnesium\",\n                \"amount\": 71.55,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 17.89\n            },\n            {\n                \"name\": \"Calcium\",\n                \"title\": \"Calcium\",\n                \"amount\": 178.12,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 17.81\n            },\n            {\n                \"name\": \"Potassium\",\n                \"title\": \"Potassium\",\n                \"amount\": 597.53,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 17.07\n            },\n            {\n                \"name\": \"Iron\",\n                \"title\": \"Iron\",\n                \"amount\": 3.07,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 17.04\n            },\n            {\n                \"name\": \"Copper\",\n                \"title\": \"Copper\",\n                \"amount\": 0.33,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 16.43\n            },\n            {\n                \"name\": \"Zinc\",\n                \"title\": \"Zinc\",\n                \"amount\": 2.12,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 14.15\n            },\n            {\n                \"name\": \"Vitamin B5\",\n                \"title\": \"Vitamin B5\",\n                \"amount\": 1.17,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 11.69\n            },\n            {\n                \"name\": \"Vitamin B2\",\n                \"title\": \"Vitamin B2\",\n                \"amount\": 0.2,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 11.5\n            },\n            {\n                \"name\": \"Vitamin A\",\n                \"title\": \"Vitamin A\",\n                \"amount\": 537.51,\n                \"unit\": \"IU\",\n                \"percentOfDailyNeeds\": 10.75\n            },\n            {\n                \"name\": \"Vitamin B3\",\n                \"title\": \"Vitamin B3\",\n                \"amount\": 2.14,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 10.71\n            },\n            {\n                \"name\": \"Vitamin B1\",\n                \"title\": \"Vitamin B1\",\n                \"amount\": 0.16,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 10.46\n            },\n            {\n                \"name\": \"Vitamin E\",\n                \"title\": \"Vitamin E\",\n                \"amount\": 1.53,\n                \"unit\": \"mg\",\n                \"percentOfDailyNeeds\": 10.2\n            },\n            {\n                \"name\": \"Vitamin B12\",\n                \"title\": \"Vitamin B12\",\n                \"amount\": 0.14,\n                \"unit\": \"µg\",\n                \"percentOfDailyNeeds\": 2.28\n            },\n            {\n                \"name\": \"Vitamin D\",\n                \"title\": \"Vitamin D\",\n                \"amount\": 0.2,\n                \"unit\": \"µg\",\n                \"percentOfDailyNeeds\": 1.31\n            }\n        ],\n        \"properties\": [\n            {\n                \"name\": \"Glycemic Index\",\n                \"title\": \"Glycemic Index\",\n                \"amount\": 114,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Glycemic Load\",\n                \"title\": \"Glycemic Load\",\n                \"amount\": 27.56,\n                \"unit\": \"\"\n            }\n        ],\n        \"flavanoids\": [\n            {\n                \"name\": \"Cyanidin\",\n                \"title\": \"Cyanidin\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Petunidin\",\n                \"title\": \"Petunidin\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Delphinidin\",\n                \"title\": \"Delphinidin\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Malvidin\",\n                \"title\": \"Malvidin\",\n                \"amount\": 0.01,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Pelargonidin\",\n                \"title\": \"Pelargonidin\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Peonidin\",\n                \"title\": \"Peonidin\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Catechin\",\n                \"title\": \"Catechin\",\n                \"amount\": 0.12,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Epigallocatechin\",\n                \"title\": \"Epigallocatechin\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Epicatechin\",\n                \"title\": \"Epicatechin\",\n                \"amount\": 0.08,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Epicatechin 3-gallate\",\n                \"title\": \"Epicatechin 3-gallate\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Epigallocatechin 3-gallate\",\n                \"title\": \"Epigallocatechin 3-gallate\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Theaflavin\",\n                \"title\": \"Theaflavin\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Thearubigins\",\n                \"title\": \"Thearubigins\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Eriodictyol\",\n                \"title\": \"Eriodictyol\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Hesperetin\",\n                \"title\": \"Hesperetin\",\n                \"amount\": 0.06,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Naringenin\",\n                \"title\": \"Naringenin\",\n                \"amount\": 0.06,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Apigenin\",\n                \"title\": \"Apigenin\",\n                \"amount\": 0.04,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Luteolin\",\n                \"title\": \"Luteolin\",\n                \"amount\": 0.1,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Isorhamnetin\",\n                \"title\": \"Isorhamnetin\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Kaempferol\",\n                \"title\": \"Kaempferol\",\n                \"amount\": 0.63,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Myricetin\",\n                \"title\": \"Myricetin\",\n                \"amount\": 0.12,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Quercetin\",\n                \"title\": \"Quercetin\",\n                \"amount\": 2.6,\n                \"unit\": \"mg\"\n            },\n            {\n                \"name\": \"Theaflavin-3,3'-digallate\",\n                \"title\": \"Theaflavin-3,3'-digallate\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Theaflavin-3'-gallate\",\n                \"title\": \"Theaflavin-3'-gallate\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Theaflavin-3-gallate\",\n                \"title\": \"Theaflavin-3-gallate\",\n                \"amount\": 0,\n                \"unit\": \"\"\n            },\n            {\n                \"name\": \"Gallocatechin\",\n                \"title\": \"Gallocatechin\",\n                \"amount\": 0,\n                \"unit\": \"mg\"\n            }\n        ],\n        \"ingredients\": [\n            {\n                \"id\": 1001,\n                \"name\": \"butter\",\n                \"amount\": 0.5,\n                \"unit\": \"tbsp\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0.07,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0.21,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 1.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 3.65,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Trans Fat\",\n                        \"name\": \"Trans Fat\",\n                        \"amount\": 0.23,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 1.49,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 0.14,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 1.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0.11,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 0.2,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0.06,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 50.91,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 5.76,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 50.69,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 177.43,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.16,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 1.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 15.27,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 1.33,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.5,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0.01,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.22,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 10011135,\n                \"name\": \"cauliflower florets\",\n                \"amount\": 1,\n                \"unit\": \"cups\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0.6,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 57,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 299,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.18,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0.06,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Trans Fat\",\n                        \"name\": \"Trans Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0.02,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 15,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0.05,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 1.91,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 44,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 1,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 48.2,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 1.92,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 25,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.42,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0.28,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.51,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.27,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 2,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 30,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0.16,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.67,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 2.97,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.08,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 22,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 4.97,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 44.3,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 15.5,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0.06,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.02,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1041009,\n                \"name\": \"cheese\",\n                \"amount\": 1,\n                \"unit\": \"tbsp\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 2.09,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 2.7,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 14.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 3.16,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 1.41,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 4.2,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.08,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 76.8,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0.09,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 5.24,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 3.74,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 60.45,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.1,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 4.97,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.47,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 93.15,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.06,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0.19,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 150.3,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 108.15,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0.19,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 15.75,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 2.48,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.42,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0.06,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0.12,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.14,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1034053,\n                \"name\": \"extra virgin olive oil\",\n                \"amount\": 0.5,\n                \"unit\": \"tbsp\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 0.07,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0.97,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 5.11,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 61.88,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 7,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 0.14,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 1,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 0.07,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 4.21,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.74,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 11215,\n                \"name\": \"garlic\",\n                \"amount\": 2.5,\n                \"unit\": \"cloves\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 1.07,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0.23,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 30.08,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.09,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 1.88,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.08,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 11.48,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 2.34,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0.48,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 11.18,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.13,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0.04,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.05,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.09,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0.16,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 1.27,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0.13,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 2.32,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0.68,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 13.58,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 2.48,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 1.74,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.13,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.02,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 20420,\n                \"name\": \"pasta\",\n                \"amount\": 3,\n                \"unit\": \"ounces\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 53.75,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 15.31,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 189.66,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.12,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0.24,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Trans Fat\",\n                        \"name\": \"Trans Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0.15,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 45.08,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0.08,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 2.27,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 160.74,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0.25,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 11.09,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 315.53,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 1.11,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 1.28,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 1.45,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 1.2,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 2.72,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 5.1,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0.78,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.37,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 60.78,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.09,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 17.86,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 63.51,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.09,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0.05,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.48,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1032009,\n                \"name\": \"red pepper flakes\",\n                \"amount\": 1,\n                \"unit\": \"pinches\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0.02,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0.03,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 1.95,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Trans Fat\",\n                        \"name\": \"Trans Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 0.15,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 0.3,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 0.28,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0.03,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 1.64,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 29.65,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 0.33,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0.05,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 0.07,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.11,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 1102047,\n                \"name\": \"salt and pepper\",\n                \"amount\": 1,\n                \"unit\": \"servings\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 0,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 193.79,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 0.12,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 11291,\n                \"name\": \"scallions\",\n                \"amount\": 1.5,\n                \"unit\": \"\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0.11,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 11.52,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 49.68,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 3.6,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.42,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 6.66,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 3.38,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0.33,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 5.76,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.27,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0.03,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.09,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.07,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0.47,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 2.88,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0.03,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0.85,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 179.46,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0.1,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 12.96,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 1.32,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 1.03,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 37.26,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 14106,\n                \"name\": \"white wine\",\n                \"amount\": 1,\n                \"unit\": \"tbsp\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0.02,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0.15,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 10.65,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 1.5,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.14,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 2.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 30.3,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 0.01,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Folic Acid\",\n                        \"name\": \"Folic Acid\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 12.3,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.04,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 0.75,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0.02,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0.01,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 0.39,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 1.35,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 0.39,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 1.55,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Choline\",\n                        \"name\": \"Choline\",\n                        \"amount\": 0.65,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0.06,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    }\n                ]\n            },\n            {\n                \"id\": 99025,\n                \"name\": \"whole wheat bread crumbs\",\n                \"amount\": 0.13,\n                \"unit\": \"cup\",\n                \"nutrients\": [\n                    {\n                        \"title\": \"Selenium\",\n                        \"name\": \"Selenium\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Folate\",\n                        \"name\": \"Folate\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Potassium\",\n                        \"name\": \"Potassium\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B6\",\n                        \"name\": \"Vitamin B6\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Saturated Fat\",\n                        \"name\": \"Saturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Trans Fat\",\n                        \"name\": \"Trans Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Mono Unsaturated Fat\",\n                        \"name\": \"Mono Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Magnesium\",\n                        \"name\": \"Magnesium\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B1\",\n                        \"name\": \"Vitamin B1\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Sugar\",\n                        \"name\": \"Sugar\",\n                        \"amount\": 0.45,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Phosphorus\",\n                        \"name\": \"Phosphorus\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin D\",\n                        \"name\": \"Vitamin D\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Fluoride\",\n                        \"name\": \"Fluoride\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin C\",\n                        \"name\": \"Vitamin C\",\n                        \"amount\": 2.7,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Copper\",\n                        \"name\": \"Copper\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Protein\",\n                        \"name\": \"Protein\",\n                        \"amount\": 1.35,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Calories\",\n                        \"name\": \"Calories\",\n                        \"amount\": 41.18,\n                        \"unit\": \"kcal\"\n                    },\n                    {\n                        \"title\": \"Iron\",\n                        \"name\": \"Iron\",\n                        \"amount\": 0.95,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fat\",\n                        \"name\": \"Fat\",\n                        \"amount\": 0.45,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin B3\",\n                        \"name\": \"Vitamin B3\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Zinc\",\n                        \"name\": \"Zinc\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Fiber\",\n                        \"name\": \"Fiber\",\n                        \"amount\": 1.35,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Sodium\",\n                        \"name\": \"Sodium\",\n                        \"amount\": 72,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Manganese\",\n                        \"name\": \"Manganese\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B5\",\n                        \"name\": \"Vitamin B5\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Net Carbohydrates\",\n                        \"name\": \"Net Carbohydrates\",\n                        \"amount\": 9.45,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin A\",\n                        \"name\": \"Vitamin A\",\n                        \"amount\": 0,\n                        \"unit\": \"IU\"\n                    },\n                    {\n                        \"title\": \"Vitamin E\",\n                        \"name\": \"Vitamin E\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Calcium\",\n                        \"name\": \"Calcium\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Carbohydrates\",\n                        \"name\": \"Carbohydrates\",\n                        \"amount\": 10.8,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Caffeine\",\n                        \"name\": \"Caffeine\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Cholesterol\",\n                        \"name\": \"Cholesterol\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Alcohol\",\n                        \"name\": \"Alcohol\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    },\n                    {\n                        \"title\": \"Vitamin K\",\n                        \"name\": \"Vitamin K\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B2\",\n                        \"name\": \"Vitamin B2\",\n                        \"amount\": 0,\n                        \"unit\": \"mg\"\n                    },\n                    {\n                        \"title\": \"Vitamin B12\",\n                        \"name\": \"Vitamin B12\",\n                        \"amount\": 0,\n                        \"unit\": \"µg\"\n                    },\n                    {\n                        \"title\": \"Poly Unsaturated Fat\",\n                        \"name\": \"Poly Unsaturated Fat\",\n                        \"amount\": 0,\n                        \"unit\": \"g\"\n                    }\n                ]\n            }\n        ],\n        \"caloricBreakdown\": {\n            \"percentProtein\": 12.89,\n            \"percentFat\": 30.29,\n            \"percentCarbs\": 56.82\n        },\n        \"weightPerServing\": {\n            \"amount\": 269,\n            \"unit\": \"g\"\n        }\n    },\n    \"extendedIngredients\": [\n        {\n            \"id\": 1001,\n            \"aisle\": \"Milk, Eggs, Other Dairy\",\n            \"image\": \"butter-sliced.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"butter\",\n            \"nameClean\": \"butter\",\n            \"original\": \"1 tbsp butter\",\n            \"originalString\": \"1 tbsp butter\",\n            \"originalName\": \"butter\",\n            \"amount\": 1,\n            \"unit\": \"tbsp\",\n            \"meta\": [],\n            \"metaInformation\": [],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 1,\n                    \"unitShort\": \"Tbsp\",\n                    \"unitLong\": \"Tbsp\"\n                },\n                \"metric\": {\n                    \"amount\": 1,\n                    \"unitShort\": \"Tbsp\",\n                    \"unitLong\": \"Tbsp\"\n                }\n            }\n        },\n        {\n            \"id\": 10011135,\n            \"aisle\": \"Produce\",\n            \"image\": \"cauliflower.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"cauliflower florets\",\n            \"nameClean\": \"cauliflower florets\",\n            \"original\": \"about 2 cups frozen cauliflower florets, thawed, cut into bite-sized pieces\",\n            \"originalString\": \"about 2 cups frozen cauliflower florets, thawed, cut into bite-sized pieces\",\n            \"originalName\": \"about frozen cauliflower florets, thawed, cut into bite-sized pieces\",\n            \"amount\": 2,\n            \"unit\": \"cups\",\n            \"meta\": [\n                \"frozen\",\n                \"thawed\",\n                \"cut into bite-sized pieces\"\n            ],\n            \"metaInformation\": [\n                \"frozen\",\n                \"thawed\",\n                \"cut into bite-sized pieces\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"cups\",\n                    \"unitLong\": \"cups\"\n                },\n                \"metric\": {\n                    \"amount\": 473.176,\n                    \"unitShort\": \"ml\",\n                    \"unitLong\": \"milliliters\"\n                }\n            }\n        },\n        {\n            \"id\": 1041009,\n            \"aisle\": \"Cheese\",\n            \"image\": \"cheddar-cheese.png\",\n            \"consistency\": \"solid\",\n            \"name\": \"cheese\",\n            \"nameClean\": \"cheese\",\n            \"original\": \"2 tbsp grated cheese (I used romano)\",\n            \"originalString\": \"2 tbsp grated cheese (I used romano)\",\n            \"originalName\": \"grated cheese (I used romano)\",\n            \"amount\": 2,\n            \"unit\": \"tbsp\",\n            \"meta\": [\n                \"grated\",\n                \"(I used romano)\"\n            ],\n            \"metaInformation\": [\n                \"grated\",\n                \"(I used romano)\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"Tbsps\",\n                    \"unitLong\": \"Tbsps\"\n                },\n                \"metric\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"Tbsps\",\n                    \"unitLong\": \"Tbsps\"\n                }\n            }\n        },\n        {\n            \"id\": 1034053,\n            \"aisle\": \"Oil, Vinegar, Salad Dressing\",\n            \"image\": \"olive-oil.jpg\",\n            \"consistency\": \"liquid\",\n            \"name\": \"extra virgin olive oil\",\n            \"nameClean\": \"extra virgin olive oil\",\n            \"original\": \"1-2 tbsp extra virgin olive oil\",\n            \"originalString\": \"1-2 tbsp extra virgin olive oil\",\n            \"originalName\": \"extra virgin olive oil\",\n            \"amount\": 1,\n            \"unit\": \"tbsp\",\n            \"meta\": [],\n            \"metaInformation\": [],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 1,\n                    \"unitShort\": \"Tbsp\",\n                    \"unitLong\": \"Tbsp\"\n                },\n                \"metric\": {\n                    \"amount\": 1,\n                    \"unitShort\": \"Tbsp\",\n                    \"unitLong\": \"Tbsp\"\n                }\n            }\n        },\n        {\n            \"id\": 11215,\n            \"aisle\": \"Produce\",\n            \"image\": \"garlic.png\",\n            \"consistency\": \"solid\",\n            \"name\": \"garlic\",\n            \"nameClean\": \"garlic\",\n            \"original\": \"5-6 cloves garlic\",\n            \"originalString\": \"5-6 cloves garlic\",\n            \"originalName\": \"garlic\",\n            \"amount\": 5,\n            \"unit\": \"cloves\",\n            \"meta\": [],\n            \"metaInformation\": [],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 5,\n                    \"unitShort\": \"cloves\",\n                    \"unitLong\": \"cloves\"\n                },\n                \"metric\": {\n                    \"amount\": 5,\n                    \"unitShort\": \"cloves\",\n                    \"unitLong\": \"cloves\"\n                }\n            }\n        },\n        {\n            \"id\": 20420,\n            \"aisle\": \"Pasta and Rice\",\n            \"image\": \"fusilli.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"pasta\",\n            \"nameClean\": \"pasta\",\n            \"original\": \"6-8 ounces pasta (I used linguine)\",\n            \"originalString\": \"6-8 ounces pasta (I used linguine)\",\n            \"originalName\": \"pasta (I used linguine)\",\n            \"amount\": 6,\n            \"unit\": \"ounces\",\n            \"meta\": [\n                \"(I used linguine)\"\n            ],\n            \"metaInformation\": [\n                \"(I used linguine)\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 6,\n                    \"unitShort\": \"oz\",\n                    \"unitLong\": \"ounces\"\n                },\n                \"metric\": {\n                    \"amount\": 170.097,\n                    \"unitShort\": \"g\",\n                    \"unitLong\": \"grams\"\n                }\n            }\n        },\n        {\n            \"id\": 1032009,\n            \"aisle\": \"Spices and Seasonings\",\n            \"image\": \"red-pepper-flakes.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"red pepper flakes\",\n            \"nameClean\": \"red pepper flakes\",\n            \"original\": \"couple of pinches red pepper flakes, optional\",\n            \"originalString\": \"couple of pinches red pepper flakes, optional\",\n            \"originalName\": \"couple of red pepper flakes, optional\",\n            \"amount\": 2,\n            \"unit\": \"pinches\",\n            \"meta\": [\n                \"red\"\n            ],\n            \"metaInformation\": [\n                \"red\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"pinches\",\n                    \"unitLong\": \"pinches\"\n                },\n                \"metric\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"pinches\",\n                    \"unitLong\": \"pinches\"\n                }\n            }\n        },\n        {\n            \"id\": 1102047,\n            \"aisle\": \"Spices and Seasonings\",\n            \"image\": \"salt-and-pepper.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"salt and pepper\",\n            \"nameClean\": \"salt and pepper\",\n            \"original\": \"salt and pepper, to taste\",\n            \"originalString\": \"salt and pepper, to taste\",\n            \"originalName\": \"salt and pepper, to taste\",\n            \"amount\": 2,\n            \"unit\": \"servings\",\n            \"meta\": [\n                \"to taste\"\n            ],\n            \"metaInformation\": [\n                \"to taste\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"servings\",\n                    \"unitLong\": \"servings\"\n                },\n                \"metric\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"servings\",\n                    \"unitLong\": \"servings\"\n                }\n            }\n        },\n        {\n            \"id\": 11291,\n            \"aisle\": \"Produce\",\n            \"image\": \"spring-onions.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"scallions\",\n            \"nameClean\": \"spring onions\",\n            \"original\": \"3 scallions, chopped, white and green parts separated\",\n            \"originalString\": \"3 scallions, chopped, white and green parts separated\",\n            \"originalName\": \"scallions, chopped, white and green parts separated\",\n            \"amount\": 3,\n            \"unit\": \"\",\n            \"meta\": [\n                \"white\",\n                \"green\",\n                \"separated\",\n                \"chopped\"\n            ],\n            \"metaInformation\": [\n                \"white\",\n                \"green\",\n                \"separated\",\n                \"chopped\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 3,\n                    \"unitShort\": \"\",\n                    \"unitLong\": \"\"\n                },\n                \"metric\": {\n                    \"amount\": 3,\n                    \"unitShort\": \"\",\n                    \"unitLong\": \"\"\n                }\n            }\n        },\n        {\n            \"id\": 14106,\n            \"aisle\": \"Alcoholic Beverages\",\n            \"image\": \"white-wine.jpg\",\n            \"consistency\": \"liquid\",\n            \"name\": \"white wine\",\n            \"nameClean\": \"white wine\",\n            \"original\": \"2-3 tbsp white wine\",\n            \"originalString\": \"2-3 tbsp white wine\",\n            \"originalName\": \"white wine\",\n            \"amount\": 2,\n            \"unit\": \"tbsp\",\n            \"meta\": [\n                \"white\"\n            ],\n            \"metaInformation\": [\n                \"white\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"Tbsps\",\n                    \"unitLong\": \"Tbsps\"\n                },\n                \"metric\": {\n                    \"amount\": 2,\n                    \"unitShort\": \"Tbsps\",\n                    \"unitLong\": \"Tbsps\"\n                }\n            }\n        },\n        {\n            \"id\": 99025,\n            \"aisle\": \"Pasta and Rice\",\n            \"image\": \"breadcrumbs.jpg\",\n            \"consistency\": \"solid\",\n            \"name\": \"whole wheat bread crumbs\",\n            \"nameClean\": \"whole wheat breadcrumbs\",\n            \"original\": \"1/4 cup whole wheat bread crumbs (I used panko)\",\n            \"originalString\": \"1/4 cup whole wheat bread crumbs (I used panko)\",\n            \"originalName\": \"whole wheat bread crumbs (I used panko)\",\n            \"amount\": 0.25,\n            \"unit\": \"cup\",\n            \"meta\": [\n                \"whole wheat\",\n                \"(I used panko)\"\n            ],\n            \"metaInformation\": [\n                \"whole wheat\",\n                \"(I used panko)\"\n            ],\n            \"measures\": {\n                \"us\": {\n                    \"amount\": 0.25,\n                    \"unitShort\": \"cups\",\n                    \"unitLong\": \"cups\"\n                },\n                \"metric\": {\n                    \"amount\": 59.147,\n                    \"unitShort\": \"ml\",\n                    \"unitLong\": \"milliliters\"\n                }\n            }\n        }\n    ],\n    \"instructions\": \"\",\n    \"analyzedInstructions\": [],\n    \"dairyFree\": false,\n    \"glutenFree\": false,\n    \"sustainable\": false,\n    \"vegan\": false,\n    \"vegetarian\": false,\n    \"veryHealthy\": false,\n    \"veryPopular\": false\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/recipes/:recipe_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										":recipe_id"
									],
									"variable": [
										{
											"key": "recipe_id",
											"value": "{{recipe_id}}"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "ETag",
									"value": "W/\"48-FEzUEdKVo+p1EIDuJMCx8bDVnWc\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:19:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: Not enough apihit to perform this operation\"\n}"
						}
					]
				},
				{
					"name": "Recommendation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let recommendation_test = pm.variables.get('recommendation_test');\r",
									"// 3 scenario \r",
									"if (!recommendation_test || recommendation_test.length <= 0) {\r",
									"    // user[0] admin, \r",
									"    recommendation_test = [\r",
									"        {\r",
									"            \"number\": 5,\r",
									"            \"minFat\": 50, \r",
									"            \"maxFat\": 100, \r",
									"            \"minCarbs\": 50, \r",
									"            \"maxCarbs\": 100, \r",
									"            \"minSugar\": 50, \r",
									"            \"maxSugar\": 100, \r",
									"            \"minCholesterol\": 50, \r",
									"            \"maxCholesterol\": 100, \r",
									"            \"minProtein\":0,\r",
									"            \"maxProtein\":150,\r",
									"            \"minCalcium\":0,\r",
									"            \"maxCalcium\":300,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": ['id','title','image','nutrition']\r",
									"        },\r",
									"        {\r",
									"            \"number\": 5,\r",
									"            \"minFat\": 0, \r",
									"            \"maxFat\": 0, \r",
									"            \"minCarbs\": 0, \r",
									"            \"maxCarbs\": 0, \r",
									"            \"minSugar\": 50, \r",
									"            \"maxSugar\": 100, \r",
									"            \"minCholesterol\": 50, \r",
									"            \"maxCholesterol\": 100, \r",
									"            \"minProtein\":0,\r",
									"            \"maxProtein\":100,\r",
									"            \"minCalcium\":0,\r",
									"            \"maxCalcium\":100,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 404,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"         {\r",
									"            \"number\": 5,\r",
									"            \"minFat\": 50, \r",
									"            \"maxFat\": 100, \r",
									"            \"minCarbs\": 50, \r",
									"            \"maxCarbs\": 100,\r",
									"            \"minSugar\": 50, \r",
									"            \"maxSugar\": 100,  \r",
									"            \"minCholesterol\": 50, \r",
									"            \"maxCholesterol\": 100,\r",
									"            \"minProtein\":0,\r",
									"            \"maxProtein\":100,\r",
									"            \"minCalcium\":0,\r",
									"            \"maxCalcium\":100,\r",
									"            \"x-auth-token\": pm.environment.get('token_user_no_apihit'),\r",
									"            \"return_code\": 429,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        {\r",
									"            \"number\": 5,\r",
									"            \"minFat\": 'a', \r",
									"            \"maxFat\": 100, \r",
									"            \"minCarbs\": 50, \r",
									"            \"maxCarbs\": 100, \r",
									"            \"minSugar\": 50, \r",
									"            \"maxSugar\": 100, \r",
									"            \"minCholesterol\": 50, \r",
									"            \"maxCholesterol\": 100, \r",
									"            \"minProtein\":0,\r",
									"            \"maxProtein\":100,\r",
									"            \"minCalcium\":0,\r",
									"            \"maxCalcium\":100,\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"return_code\": 400,\r",
									"            \"return_body\": ['errors']\r",
									"        },\r",
									"        {\r",
									"            \"number\": 5,\r",
									"            \"minFat\": 50, \r",
									"            \"maxFat\": 100, \r",
									"            \"minCarbs\": 50, \r",
									"            \"maxCarbs\": 100, \r",
									"            \"minSugar\": 50, \r",
									"            \"maxSugar\": 100, \r",
									"            \"minCholesterol\": 50, \r",
									"            \"maxCholesterol\": 100, \r",
									"            \"minProtein\":0,\r",
									"            \"maxProtein\":100,\r",
									"            \"minCalcium\":0,\r",
									"            \"maxCalcium\":100,\r",
									"            \"x-auth-token\": '',\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": ['message']\r",
									"        },\r",
									"        \r",
									"    ]\r",
									"\r",
									"}\r",
									"\r",
									"let currentData = recommendation_test.shift();\r",
									"\r",
									"pm.environment.set(\"x-auth-token\",currentData[\"x-auth-token\"]);\r",
									"pm.environment.set(\"number\",currentData[\"number\"]);\r",
									"pm.environment.set(\"minFat\",currentData[\"minFat\"]);\r",
									"pm.environment.set(\"maxFat\",currentData[\"maxFat\"]);\r",
									"pm.environment.set(\"minCarbs\",currentData[\"minCarbs\"]);\r",
									"pm.environment.set(\"maxCarbs\",currentData[\"maxCarbs\"]);\r",
									"pm.environment.set(\"minSugar\",currentData[\"minSugar\"]);\r",
									"pm.environment.set(\"maxSugar\",currentData[\"maxSugar\"]);\r",
									"pm.environment.set(\"minCholesterol\",currentData[\"minCholesterol\"]);\r",
									"pm.environment.set(\"maxCholesterol\",currentData[\"maxCholesterol\"]);\r",
									"pm.environment.set(\"minProtein\",currentData[\"minProtein\"]);\r",
									"pm.environment.set(\"maxProtein\",currentData[\"maxProtein\"]);\r",
									"pm.environment.set(\"minCalcium\",currentData[\"minCalcium\"]);\r",
									"pm.environment.set(\"maxCalcium\",currentData[\"maxCalcium\"]);\r",
									"\r",
									"pm.environment.set('return_code',currentData['return_code'])\r",
									"pm.environment.set('return_body',currentData['return_body'])\r",
									"\r",
									"pm.environment.set('recommendation_test',recommendation_test)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    if (statusCode == 200) {\r",
									"        jsonData.forEach(obj => pm.expect(obj).to.have.keys(returnData))\r",
									"    } else {\r",
									"        pm.expect(jsonData).to.have.keys(returnData)\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/recipes/recommendation?number={{number}}&minFat={{minFat}}&maxFat={{maxFat}}&minCarbs={{minCarbs}}&maxCarbs={{maxCarbs}}&minSugar={{minSugar}}&maxSugar={{maxSugar}}&minCholesterol={{minCholesterol}}&maxCholesterol={{maxCholesterol}}&minProtein={{minProtein}}&maxProtein={{maxProtein}}&minCalcium={{minCalcium}}&maxCalcium={{maxCalcium}}",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"recipes",
								"recommendation"
							],
							"query": [
								{
									"key": "number",
									"value": "{{number}}",
									"description": "the number of recipes returned (default: 10)"
								},
								{
									"key": "minFat",
									"value": "{{minFat}}",
									"description": "the minimal fat contained in the recipes"
								},
								{
									"key": "maxFat",
									"value": "{{maxFat}}",
									"description": "the maximal fat contained in the recipes"
								},
								{
									"key": "minCarbs",
									"value": "{{minCarbs}}",
									"description": "the minimal carbs contained in the recipes"
								},
								{
									"key": "maxCarbs",
									"value": "{{maxCarbs}}",
									"description": "the maximal carbs contained in the recipes"
								},
								{
									"key": "minSugar",
									"value": "{{minSugar}}",
									"description": "the minimal sugar contained in the recipes"
								},
								{
									"key": "maxSugar",
									"value": "{{maxSugar}}",
									"description": "the maximal sugar contained in the recipes"
								},
								{
									"key": "minCholesterol",
									"value": "{{minCholesterol}}",
									"description": "the minimal cholesterol contained in the recipes"
								},
								{
									"key": "maxCholesterol",
									"value": "{{maxCholesterol}}",
									"description": "the maximal cholesterol contained in the recipes"
								},
								{
									"key": "minProtein",
									"value": "{{minProtein}}",
									"description": "the minimal protein contained in the recipes"
								},
								{
									"key": "maxProtein",
									"value": "{{maxProtein}}",
									"description": "the maximal protein contained in the recipes"
								},
								{
									"key": "minCalcium",
									"value": "{{minCalcium}}",
									"description": "the minimal calcium contained in the recipes"
								},
								{
									"key": "maxCalcium",
									"value": "{{maxCalcium}}",
									"description": "the maximal calcium contained in the recipes"
								}
							]
						},
						"description": "Recommendation can give you some recipes for controlling your food based on your body fat"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/recipes/recommendation?number=5&minFat=50&maxFat=100&minCarbs=30&maxCarbs=100",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"recommendation"
									],
									"query": [
										{
											"key": "number",
											"value": "5",
											"description": "the number of recipes returned"
										},
										{
											"key": "minFat",
											"value": "50"
										},
										{
											"key": "maxFat",
											"value": "100"
										},
										{
											"key": "minCarbs",
											"value": "30"
										},
										{
											"key": "maxCarbs",
											"value": "100"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 08:35:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/recipes/recommendation?number={{number}}&minFat={{minFat}}&maxFat={{maxFat}}&minCarbs={{minCarbs}}&maxCarbs={{maxCarbs}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"recommendation"
									],
									"query": [
										{
											"key": "number",
											"value": "{{number}}",
											"description": "the number of recipes returned default 10"
										},
										{
											"key": "minFat",
											"value": "{{minFat}}",
											"description": "the minimal fat contained in the foods"
										},
										{
											"key": "maxFat",
											"value": "{{maxFat}}",
											"description": "the maximal fat contained in the foods"
										},
										{
											"key": "minCarbs",
											"value": "{{minCarbs}}",
											"description": "the minimal carbs contained in the foods"
										},
										{
											"key": "maxCarbs",
											"value": "{{maxCarbs}}",
											"description": "the maximal carbs contained in the foods"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1186"
								},
								{
									"key": "ETag",
									"value": "W/\"4a2-V2TzhpJNVofee+/VZy2554HqxR4\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:32:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 716268,\n        \"title\": \"African Chicken Peanut Stew\",\n        \"image\": \"https://spoonacular.com/recipeImages/716268-312x231.jpg\",\n        \"nutrition\": {\n            \"nutrients\": [\n                {\n                    \"title\": \"Fat\",\n                    \"amount\": 88.6933,\n                    \"unit\": \"g\"\n                },\n                {\n                    \"title\": \"Carbohydrates\",\n                    \"amount\": 60.4498,\n                    \"unit\": \"g\"\n                }\n            ]\n        }\n    },\n    {\n        \"id\": 715428,\n        \"title\": \"Baked Potato Soup\",\n        \"image\": \"https://spoonacular.com/recipeImages/715428-312x231.jpg\",\n        \"nutrition\": {\n            \"nutrients\": [\n                {\n                    \"title\": \"Fat\",\n                    \"amount\": 52.6539,\n                    \"unit\": \"g\"\n                },\n                {\n                    \"title\": \"Carbohydrates\",\n                    \"amount\": 57.3072,\n                    \"unit\": \"g\"\n                }\n            ]\n        }\n    },\n    {\n        \"id\": 633754,\n        \"title\": \"Baked Ratatouille\",\n        \"image\": \"https://spoonacular.com/recipeImages/633754-312x231.jpg\",\n        \"nutrition\": {\n            \"nutrients\": [\n                {\n                    \"title\": \"Fat\",\n                    \"amount\": 69.3835,\n                    \"unit\": \"g\"\n                },\n                {\n                    \"title\": \"Carbohydrates\",\n                    \"amount\": 82.4485,\n                    \"unit\": \"g\"\n                }\n            ]\n        }\n    },\n    {\n        \"id\": 639606,\n        \"title\": \"Classic Greek Moussaka\",\n        \"image\": \"https://spoonacular.com/recipeImages/639606-312x231.jpg\",\n        \"nutrition\": {\n            \"nutrients\": [\n                {\n                    \"title\": \"Fat\",\n                    \"amount\": 52.2484,\n                    \"unit\": \"g\"\n                },\n                {\n                    \"title\": \"Carbohydrates\",\n                    \"amount\": 54.715,\n                    \"unit\": \"g\"\n                }\n            ]\n        }\n    },\n    {\n        \"id\": 658725,\n        \"title\": \"Rocky Road Ice Cream\",\n        \"image\": \"https://spoonacular.com/recipeImages/658725-312x231.jpg\",\n        \"nutrition\": {\n            \"nutrients\": [\n                {\n                    \"title\": \"Fat\",\n                    \"amount\": 65.09,\n                    \"unit\": \"g\"\n                },\n                {\n                    \"title\": \"Carbohydrates\",\n                    \"amount\": 70.6126,\n                    \"unit\": \"g\"\n                }\n            ]\n        }\n    }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/recipes/recommendation?number={{number}}&minFat={{minFat}}&maxFat={{maxFat}}&minCarbs={{minCarbs}}&maxCarbs={{maxCarbs}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"recommendation"
									],
									"query": [
										{
											"key": "number",
											"value": "{{number}}",
											"description": "the number of recipes returned default 10"
										},
										{
											"key": "minFat",
											"value": "{{minFat}}",
											"description": "the minimal fat contained in the foods"
										},
										{
											"key": "maxFat",
											"value": "{{maxFat}}",
											"description": "the maximal fat contained in the foods"
										},
										{
											"key": "minCarbs",
											"value": "{{minCarbs}}",
											"description": "the minimal carbs contained in the foods"
										},
										{
											"key": "maxCarbs",
											"value": "{{maxCarbs}}",
											"description": "the maximal carbs contained in the foods"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "ETag",
									"value": "W/\"25-ICRpdtfCqxIcc65QrdLDUQvNrHA\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:50:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"minFat must be number!\"\n    ]\n}"
						},
						{
							"name": "Too Many Requets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/recipes/recommendation?number={{number}}&minFat={{minFat}}&maxFat={{maxFat}}&minCarbs={{minCarbs}}&maxCarbs={{maxCarbs}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"recipes",
										"recommendation"
									],
									"query": [
										{
											"key": "number",
											"value": "{{number}}",
											"description": "the number of recipes returned default 10"
										},
										{
											"key": "minFat",
											"value": "{{minFat}}",
											"description": "the minimal fat contained in the foods"
										},
										{
											"key": "maxFat",
											"value": "{{maxFat}}",
											"description": "the maximal fat contained in the foods"
										},
										{
											"key": "minCarbs",
											"value": "{{minCarbs}}",
											"description": "the minimal carbs contained in the foods"
										},
										{
											"key": "maxCarbs",
											"value": "{{maxCarbs}}",
											"description": "the maximal carbs contained in the foods"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "72"
								},
								{
									"key": "ETag",
									"value": "W/\"48-FEzUEdKVo+p1EIDuJMCx8bDVnWc\""
								},
								{
									"key": "Date",
									"value": "Tue, 18 May 2021 08:51:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: Not enough apihit to perform this operation\"\n}"
						}
					]
				}
			],
			"description": "Recipes will help you to maintain your income outcome calories."
		},
		{
			"name": "BMI",
			"item": [
				{
					"name": "View BMI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let view_bmi = pm.variables.get(\"view_bmi_test\");\r",
									"\r",
									"if(!view_bmi || view_bmi.length <= 0) {\r",
									"    let age = pm.variables.replaceIn(\"{{$randomInt}}\") % 50 + 20;\r",
									"    let height = pm.variables.replaceIn(\"{{$randomInt}}\") % 100 + 130;\r",
									"    let weight = pm.variables.replaceIn(\"{{$randomInt}}\") % 90 + 40;\r",
									"    view_bmi = [\r",
									"        {\r",
									"            \"x-auth-token\": \"\",\r",
									"            \"age\": age,\r",
									"            \"height\": height,\r",
									"            \"weight\": weight,\r",
									"            \"return_code\": 401,\r",
									"            \"return_body\": [\"message\"]\r",
									"        },\r",
									"        {\r",
									"            \"x-auth-token\": pm.environment.get('token_user'),\r",
									"            \"age\": age,\r",
									"            \"height\": height,\r",
									"            \"weight\": weight,\r",
									"            \"return_code\": 200,\r",
									"            \"return_body\": [\"bmi\",\"health\",\"healthy_bmi_range\"]\r",
									"        },\r",
									"    ]\r",
									"}\r",
									"\r",
									"let currentData = view_bmi.shift();\r",
									"\r",
									"\r",
									"pm.environment.set('age', currentData['age']);\r",
									"pm.environment.set('height', currentData['height']);\r",
									"pm.environment.set('weight', currentData['weight']);\r",
									"pm.environment.set('x-auth-token', currentData['x-auth-token']);\r",
									"pm.environment.set('return_code', currentData['return_code']);\r",
									"pm.environment.set('return_body',currentData['return_body']);\r",
									"\r",
									"pm.environment.set('view_bmi_test', view_bmi);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"let statusCode = pm.environment.get('return_code');\r",
									"let returnData = pm.environment.get('return_body');\r",
									"\r",
									"pm.test(`Status (${statusCode}) and return data (${returnData}) is correct`, ()=>{\r",
									"    let statusCode = pm.environment.get('return_code');\r",
									"    pm.response.to.have.status(statusCode);\r",
									"    pm.expect(jsonData).to.have.keys(returnData);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://fit4u.herokuapp.com/api/bmi?age={{age}}&height={{height}}&weight={{weight}}",
							"protocol": "https",
							"host": [
								"fit4u",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"bmi"
							],
							"query": [
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "height",
									"value": "{{height}}"
								},
								{
									"key": "weight",
									"value": "{{weight}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwidXNlcm5hbWUiOiJidWRpc3Nzc3NzIiwicm9sZSI6IjEiLCJpYXQiOjE2MTk3ODMxNDZ9.YVR6lSgrd-1qU886Gk2rM0sPRKw-TlK4mEgOUBFxiKo",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/bmi?age=20&height=168&weight=52",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"bmi"
									],
									"query": [
										{
											"key": "age",
											"value": "20"
										},
										{
											"key": "height",
											"value": "168"
										},
										{
											"key": "weight",
											"value": "52"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "82"
								},
								{
									"key": "ETag",
									"value": "W/\"52-bQk72rOGVcqGyLba6aL+mghLKB4\""
								},
								{
									"key": "Date",
									"value": "Fri, 30 Apr 2021 14:49:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"bmi\": 18.42403628117914,\n    \"health\": \"Mild Thinness\",\n    \"healthy_bmi_range\": \"18.5 - 25\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-auth-token",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{url}}/api/bmi?age=21&height=168&weight=55",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"bmi"
									],
									"query": [
										{
											"key": "age",
											"value": "21"
										},
										{
											"key": "height",
											"value": "168"
										},
										{
											"key": "weight",
											"value": "55"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "ETag",
									"value": "W/\"2f-iBbW8yM+SRGQFApaLe59WVMoV9c\""
								},
								{
									"key": "Date",
									"value": "Fri, 21 May 2021 01:43:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Access Denied: No Token Provided!\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "localhost:3000"
		}
	]
}